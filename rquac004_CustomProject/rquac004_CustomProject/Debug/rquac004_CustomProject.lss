
rquac004_CustomProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a8  00800100  000013aa  0000143e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ee  008001a8  008001a8  000014e6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001544  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00001588  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001db3  00000000  00000000  00001738  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000af9  00000000  00000000  000034eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010f3  00000000  00000000  00003fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000043c  00000000  00000000  000050d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000807  00000000  00000000  00005514  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e3b  00000000  00000000  00005d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00006b56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	6e c0       	rjmp	.+220    	; 0x112 <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ea ea       	ldi	r30, 0xAA	; 170
      a0:	f3 e1       	ldi	r31, 0x13	; 19
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 3a       	cpi	r26, 0xA8	; 168
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a8 ea       	ldi	r26, 0xA8	; 168
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a6 39       	cpi	r26, 0x96	; 150
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	89 d4       	rcall	.+2322   	; 0x9d6 <main>
      c4:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <TimerOn>:
	// ADSC becomes ? again
	// till then, run loop continuously
	while(ADCSRA & (1<<ADSC));

	return (ADC);
}
      ca:	8b e0       	ldi	r24, 0x0B	; 11
      cc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
      d0:	8d e7       	ldi	r24, 0x7D	; 125
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
      d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
      dc:	82 e0       	ldi	r24, 0x02	; 2
      de:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
      e2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
      e6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
      ea:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
      ee:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
      f2:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
      f6:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
      fa:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <__data_end>
      fe:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <__data_end+0x1>
     102:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <__data_end+0x2>
     106:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <__data_end+0x3>
     10a:	8f b7       	in	r24, 0x3f	; 63
     10c:	80 68       	ori	r24, 0x80	; 128
     10e:	8f bf       	out	0x3f, r24	; 63
     110:	08 95       	ret

00000112 <__vector_13>:
     112:	1f 92       	push	r1
     114:	0f 92       	push	r0
     116:	0f b6       	in	r0, 0x3f	; 63
     118:	0f 92       	push	r0
     11a:	11 24       	eor	r1, r1
     11c:	8f 93       	push	r24
     11e:	9f 93       	push	r25
     120:	af 93       	push	r26
     122:	bf 93       	push	r27
     124:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <__data_end>
     128:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <__data_end+0x1>
     12c:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <__data_end+0x2>
     130:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <__data_end+0x3>
     134:	01 97       	sbiw	r24, 0x01	; 1
     136:	a1 09       	sbc	r26, r1
     138:	b1 09       	sbc	r27, r1
     13a:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <__data_end>
     13e:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <__data_end+0x1>
     142:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <__data_end+0x2>
     146:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <__data_end+0x3>
     14a:	89 2b       	or	r24, r25
     14c:	8a 2b       	or	r24, r26
     14e:	8b 2b       	or	r24, r27
     150:	99 f4       	brne	.+38     	; 0x178 <__vector_13+0x66>
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <TimerFlag>
     158:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     15c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     160:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     164:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     168:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <__data_end>
     16c:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <__data_end+0x1>
     170:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <__data_end+0x2>
     174:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <__data_end+0x3>
     178:	bf 91       	pop	r27
     17a:	af 91       	pop	r26
     17c:	9f 91       	pop	r25
     17e:	8f 91       	pop	r24
     180:	0f 90       	pop	r0
     182:	0f be       	out	0x3f, r0	; 63
     184:	0f 90       	pop	r0
     186:	1f 90       	pop	r1
     188:	18 95       	reti

0000018a <TimerSet>:
     18a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_avr_timer_M>
     18e:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_avr_timer_M+0x1>
     192:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_avr_timer_M+0x2>
     196:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_avr_timer_M+0x3>
     19a:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <__data_end>
     19e:	70 93 a9 01 	sts	0x01A9, r23	; 0x8001a9 <__data_end+0x1>
     1a2:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end+0x2>
     1a6:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__data_end+0x3>
     1aa:	08 95       	ret

000001ac <LCD_Command>:
     1ac:	88 b9       	out	0x08, r24	; 8
     1ae:	5e 98       	cbi	0x0b, 6	; 11
     1b0:	5d 98       	cbi	0x0b, 5	; 11
     1b2:	5f 9a       	sbi	0x0b, 7	; 11
     1b4:	86 e0       	ldi	r24, 0x06	; 6
     1b6:	8a 95       	dec	r24
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_Command+0xa>
     1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_Command+0x10>
     1bc:	5f 98       	cbi	0x0b, 7	; 11
     1be:	8f e0       	ldi	r24, 0x0F	; 15
     1c0:	97 e2       	ldi	r25, 0x27	; 39
     1c2:	01 97       	sbiw	r24, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <LCD_Command+0x16>
     1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <LCD_Command+0x1c>
     1c8:	00 00       	nop
     1ca:	08 95       	ret

000001cc <LCD_Char>:
     1cc:	88 b9       	out	0x08, r24	; 8
     1ce:	5e 9a       	sbi	0x0b, 6	; 11
     1d0:	5d 98       	cbi	0x0b, 5	; 11
     1d2:	5f 9a       	sbi	0x0b, 7	; 11
     1d4:	86 e0       	ldi	r24, 0x06	; 6
     1d6:	8a 95       	dec	r24
     1d8:	f1 f7       	brne	.-4      	; 0x1d6 <LCD_Char+0xa>
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <LCD_Char+0x10>
     1dc:	5f 98       	cbi	0x0b, 7	; 11
     1de:	8f e0       	ldi	r24, 0x0F	; 15
     1e0:	97 e2       	ldi	r25, 0x27	; 39
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <LCD_Char+0x16>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <LCD_Char+0x1c>
     1e8:	00 00       	nop
     1ea:	08 95       	ret

000001ec <LCD_Init>:
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	8a b9       	out	0x0a, r24	; 10
     1f0:	87 b9       	out	0x07, r24	; 7
     1f2:	2f e7       	ldi	r18, 0x7F	; 127
     1f4:	88 e3       	ldi	r24, 0x38	; 56
     1f6:	91 e0       	ldi	r25, 0x01	; 1
     1f8:	21 50       	subi	r18, 0x01	; 1
     1fa:	80 40       	sbci	r24, 0x00	; 0
     1fc:	90 40       	sbci	r25, 0x00	; 0
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <LCD_Init+0xc>
     200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_Init+0x16>
     202:	00 00       	nop
     204:	88 e3       	ldi	r24, 0x38	; 56
     206:	d2 df       	rcall	.-92     	; 0x1ac <LCD_Command>
     208:	8c e0       	ldi	r24, 0x0C	; 12
     20a:	d0 df       	rcall	.-96     	; 0x1ac <LCD_Command>
     20c:	86 e0       	ldi	r24, 0x06	; 6
     20e:	ce df       	rcall	.-100    	; 0x1ac <LCD_Command>
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	cc df       	rcall	.-104    	; 0x1ac <LCD_Command>
     214:	8f e0       	ldi	r24, 0x0F	; 15
     216:	97 e2       	ldi	r25, 0x27	; 39
     218:	01 97       	sbiw	r24, 0x01	; 1
     21a:	f1 f7       	brne	.-4      	; 0x218 <LCD_Init+0x2c>
     21c:	00 c0       	rjmp	.+0      	; 0x21e <LCD_Init+0x32>
     21e:	00 00       	nop
     220:	08 95       	ret

00000222 <LCD_String>:
     222:	cf 93       	push	r28
     224:	df 93       	push	r29
     226:	ec 01       	movw	r28, r24
     228:	88 81       	ld	r24, Y
     22a:	88 23       	and	r24, r24
     22c:	29 f0       	breq	.+10     	; 0x238 <LCD_String+0x16>
     22e:	21 96       	adiw	r28, 0x01	; 1
     230:	cd df       	rcall	.-102    	; 0x1cc <LCD_Char>
     232:	89 91       	ld	r24, Y+
     234:	81 11       	cpse	r24, r1
     236:	fc cf       	rjmp	.-8      	; 0x230 <LCD_String+0xe>
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	08 95       	ret

0000023e <LCD_String_xy>:
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	ea 01       	movw	r28, r20
     244:	81 11       	cpse	r24, r1
     246:	06 c0       	rjmp	.+12     	; 0x254 <LCD_String_xy+0x16>
     248:	64 31       	cpi	r22, 0x14	; 20
     24a:	d8 f4       	brcc	.+54     	; 0x282 <LCD_String_xy+0x44>
     24c:	86 2f       	mov	r24, r22
     24e:	80 68       	ori	r24, 0x80	; 128
     250:	ad df       	rcall	.-166    	; 0x1ac <LCD_Command>
     252:	17 c0       	rjmp	.+46     	; 0x282 <LCD_String_xy+0x44>
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	31 f4       	brne	.+12     	; 0x264 <LCD_String_xy+0x26>
     258:	64 31       	cpi	r22, 0x14	; 20
     25a:	98 f4       	brcc	.+38     	; 0x282 <LCD_String_xy+0x44>
     25c:	86 2f       	mov	r24, r22
     25e:	80 6c       	ori	r24, 0xC0	; 192
     260:	a5 df       	rcall	.-182    	; 0x1ac <LCD_Command>
     262:	0f c0       	rjmp	.+30     	; 0x282 <LCD_String_xy+0x44>
     264:	82 30       	cpi	r24, 0x02	; 2
     266:	31 f4       	brne	.+12     	; 0x274 <LCD_String_xy+0x36>
     268:	64 31       	cpi	r22, 0x14	; 20
     26a:	58 f4       	brcc	.+22     	; 0x282 <LCD_String_xy+0x44>
     26c:	84 e9       	ldi	r24, 0x94	; 148
     26e:	86 0f       	add	r24, r22
     270:	9d df       	rcall	.-198    	; 0x1ac <LCD_Command>
     272:	07 c0       	rjmp	.+14     	; 0x282 <LCD_String_xy+0x44>
     274:	83 30       	cpi	r24, 0x03	; 3
     276:	29 f4       	brne	.+10     	; 0x282 <LCD_String_xy+0x44>
     278:	64 31       	cpi	r22, 0x14	; 20
     27a:	18 f4       	brcc	.+6      	; 0x282 <LCD_String_xy+0x44>
     27c:	84 ed       	ldi	r24, 0xD4	; 212
     27e:	86 0f       	add	r24, r22
     280:	95 df       	rcall	.-214    	; 0x1ac <LCD_Command>
     282:	ce 01       	movw	r24, r28
     284:	ce df       	rcall	.-100    	; 0x222 <LCD_String>
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	08 95       	ret

0000028c <LCD_ClearTop>:
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	8e df       	rcall	.-228    	; 0x1ac <LCD_Command>
     290:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     294:	80 58       	subi	r24, 0x80	; 128
     296:	8a cf       	rjmp	.-236    	; 0x1ac <LCD_Command>
     298:	08 95       	ret

0000029a <LCD_ClearBottom>:
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	87 df       	rcall	.-242    	; 0x1ac <LCD_Command>
     29e:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     2a2:	8c 52       	subi	r24, 0x2C	; 44
     2a4:	83 cf       	rjmp	.-250    	; 0x1ac <LCD_Command>
     2a6:	08 95       	ret

000002a8 <LCD_Clear>:
     2a8:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <pos>
     2ac:	81 11       	cpse	r24, r1
     2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <LCD_Clear+0xc>
     2b0:	ed cf       	rjmp	.-38     	; 0x28c <LCD_ClearTop>
     2b2:	08 95       	ret
     2b4:	f2 cf       	rjmp	.-28     	; 0x29a <LCD_ClearBottom>
     2b6:	08 95       	ret

000002b8 <LCD_Custom_Char>:
     2b8:	0f 93       	push	r16
     2ba:	1f 93       	push	r17
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	88 30       	cpi	r24, 0x08	; 8
     2c2:	70 f4       	brcc	.+28     	; 0x2e0 <LCD_Custom_Char+0x28>
     2c4:	8b 01       	movw	r16, r22
     2c6:	88 0f       	add	r24, r24
     2c8:	88 0f       	add	r24, r24
     2ca:	88 0f       	add	r24, r24
     2cc:	80 5c       	subi	r24, 0xC0	; 192
     2ce:	6e df       	rcall	.-292    	; 0x1ac <LCD_Command>
     2d0:	e8 01       	movw	r28, r16
     2d2:	08 5f       	subi	r16, 0xF8	; 248
     2d4:	1f 4f       	sbci	r17, 0xFF	; 255
     2d6:	89 91       	ld	r24, Y+
     2d8:	79 df       	rcall	.-270    	; 0x1cc <LCD_Char>
     2da:	c0 17       	cp	r28, r16
     2dc:	d1 07       	cpc	r29, r17
     2de:	d9 f7       	brne	.-10     	; 0x2d6 <LCD_Custom_Char+0x1e>
     2e0:	df 91       	pop	r29
     2e2:	cf 91       	pop	r28
     2e4:	1f 91       	pop	r17
     2e6:	0f 91       	pop	r16
     2e8:	08 95       	ret

000002ea <LCD_Custom_Pos>:
     2ea:	cf 93       	push	r28
     2ec:	c4 2f       	mov	r28, r20
     2ee:	81 11       	cpse	r24, r1
     2f0:	06 c0       	rjmp	.+12     	; 0x2fe <LCD_Custom_Pos+0x14>
     2f2:	64 31       	cpi	r22, 0x14	; 20
     2f4:	d8 f4       	brcc	.+54     	; 0x32c <LCD_Custom_Pos+0x42>
     2f6:	86 2f       	mov	r24, r22
     2f8:	80 68       	ori	r24, 0x80	; 128
     2fa:	58 df       	rcall	.-336    	; 0x1ac <LCD_Command>
     2fc:	17 c0       	rjmp	.+46     	; 0x32c <LCD_Custom_Pos+0x42>
     2fe:	81 30       	cpi	r24, 0x01	; 1
     300:	31 f4       	brne	.+12     	; 0x30e <LCD_Custom_Pos+0x24>
     302:	64 31       	cpi	r22, 0x14	; 20
     304:	98 f4       	brcc	.+38     	; 0x32c <LCD_Custom_Pos+0x42>
     306:	86 2f       	mov	r24, r22
     308:	80 6c       	ori	r24, 0xC0	; 192
     30a:	50 df       	rcall	.-352    	; 0x1ac <LCD_Command>
     30c:	0f c0       	rjmp	.+30     	; 0x32c <LCD_Custom_Pos+0x42>
     30e:	82 30       	cpi	r24, 0x02	; 2
     310:	31 f4       	brne	.+12     	; 0x31e <LCD_Custom_Pos+0x34>
     312:	64 31       	cpi	r22, 0x14	; 20
     314:	58 f4       	brcc	.+22     	; 0x32c <LCD_Custom_Pos+0x42>
     316:	84 e9       	ldi	r24, 0x94	; 148
     318:	86 0f       	add	r24, r22
     31a:	48 df       	rcall	.-368    	; 0x1ac <LCD_Command>
     31c:	07 c0       	rjmp	.+14     	; 0x32c <LCD_Custom_Pos+0x42>
     31e:	83 30       	cpi	r24, 0x03	; 3
     320:	29 f4       	brne	.+10     	; 0x32c <LCD_Custom_Pos+0x42>
     322:	64 31       	cpi	r22, 0x14	; 20
     324:	18 f4       	brcc	.+6      	; 0x32c <LCD_Custom_Pos+0x42>
     326:	84 ed       	ldi	r24, 0xD4	; 212
     328:	86 0f       	add	r24, r22
     32a:	40 df       	rcall	.-384    	; 0x1ac <LCD_Command>
     32c:	8c 2f       	mov	r24, r28
     32e:	4e df       	rcall	.-356    	; 0x1cc <LCD_Char>
     330:	cf 91       	pop	r28
     332:	08 95       	ret

00000334 <initializeChar>:
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	cd b7       	in	r28, 0x3d	; 61
     33a:	de b7       	in	r29, 0x3e	; 62
     33c:	e0 97       	sbiw	r28, 0x30	; 48
     33e:	0f b6       	in	r0, 0x3f	; 63
     340:	f8 94       	cli
     342:	de bf       	out	0x3e, r29	; 62
     344:	0f be       	out	0x3f, r0	; 63
     346:	cd bf       	out	0x3d, r28	; 61
     348:	fe 01       	movw	r30, r28
     34a:	31 96       	adiw	r30, 0x01	; 1
     34c:	88 e0       	ldi	r24, 0x08	; 8
     34e:	df 01       	movw	r26, r30
     350:	1d 92       	st	X+, r1
     352:	8a 95       	dec	r24
     354:	e9 f7       	brne	.-6      	; 0x350 <initializeChar+0x1c>
     356:	88 e0       	ldi	r24, 0x08	; 8
     358:	ea e0       	ldi	r30, 0x0A	; 10
     35a:	f1 e0       	ldi	r31, 0x01	; 1
     35c:	de 01       	movw	r26, r28
     35e:	19 96       	adiw	r26, 0x09	; 9
     360:	01 90       	ld	r0, Z+
     362:	0d 92       	st	X+, r0
     364:	8a 95       	dec	r24
     366:	e1 f7       	brne	.-8      	; 0x360 <initializeChar+0x2c>
     368:	88 e0       	ldi	r24, 0x08	; 8
     36a:	e2 e1       	ldi	r30, 0x12	; 18
     36c:	f1 e0       	ldi	r31, 0x01	; 1
     36e:	de 01       	movw	r26, r28
     370:	51 96       	adiw	r26, 0x11	; 17
     372:	01 90       	ld	r0, Z+
     374:	0d 92       	st	X+, r0
     376:	8a 95       	dec	r24
     378:	e1 f7       	brne	.-8      	; 0x372 <initializeChar+0x3e>
     37a:	88 e0       	ldi	r24, 0x08	; 8
     37c:	ea e0       	ldi	r30, 0x0A	; 10
     37e:	f1 e0       	ldi	r31, 0x01	; 1
     380:	de 01       	movw	r26, r28
     382:	59 96       	adiw	r26, 0x19	; 25
     384:	01 90       	ld	r0, Z+
     386:	0d 92       	st	X+, r0
     388:	8a 95       	dec	r24
     38a:	e1 f7       	brne	.-8      	; 0x384 <initializeChar+0x50>
     38c:	88 e0       	ldi	r24, 0x08	; 8
     38e:	ea e1       	ldi	r30, 0x1A	; 26
     390:	f1 e0       	ldi	r31, 0x01	; 1
     392:	de 01       	movw	r26, r28
     394:	91 96       	adiw	r26, 0x21	; 33
     396:	01 90       	ld	r0, Z+
     398:	0d 92       	st	X+, r0
     39a:	8a 95       	dec	r24
     39c:	e1 f7       	brne	.-8      	; 0x396 <initializeChar+0x62>
     39e:	88 e0       	ldi	r24, 0x08	; 8
     3a0:	e2 e2       	ldi	r30, 0x22	; 34
     3a2:	f1 e0       	ldi	r31, 0x01	; 1
     3a4:	de 01       	movw	r26, r28
     3a6:	99 96       	adiw	r26, 0x29	; 41
     3a8:	01 90       	ld	r0, Z+
     3aa:	0d 92       	st	X+, r0
     3ac:	8a 95       	dec	r24
     3ae:	e1 f7       	brne	.-8      	; 0x3a8 <initializeChar+0x74>
     3b0:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <character>
     3b4:	81 11       	cpse	r24, r1
     3b6:	06 c0       	rjmp	.+12     	; 0x3c4 <initializeChar+0x90>
     3b8:	be 01       	movw	r22, r28
     3ba:	67 5f       	subi	r22, 0xF7	; 247
     3bc:	7f 4f       	sbci	r23, 0xFF	; 255
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	7b df       	rcall	.-266    	; 0x2b8 <LCD_Custom_Char>
     3c2:	0e c0       	rjmp	.+28     	; 0x3e0 <initializeChar+0xac>
     3c4:	81 30       	cpi	r24, 0x01	; 1
     3c6:	29 f4       	brne	.+10     	; 0x3d2 <initializeChar+0x9e>
     3c8:	be 01       	movw	r22, r28
     3ca:	6f 5e       	subi	r22, 0xEF	; 239
     3cc:	7f 4f       	sbci	r23, 0xFF	; 255
     3ce:	74 df       	rcall	.-280    	; 0x2b8 <LCD_Custom_Char>
     3d0:	07 c0       	rjmp	.+14     	; 0x3e0 <initializeChar+0xac>
     3d2:	82 30       	cpi	r24, 0x02	; 2
     3d4:	29 f4       	brne	.+10     	; 0x3e0 <initializeChar+0xac>
     3d6:	be 01       	movw	r22, r28
     3d8:	67 5e       	subi	r22, 0xE7	; 231
     3da:	7f 4f       	sbci	r23, 0xFF	; 255
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	6c df       	rcall	.-296    	; 0x2b8 <LCD_Custom_Char>
     3e0:	be 01       	movw	r22, r28
     3e2:	6f 5f       	subi	r22, 0xFF	; 255
     3e4:	7f 4f       	sbci	r23, 0xFF	; 255
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	67 df       	rcall	.-306    	; 0x2b8 <LCD_Custom_Char>
     3ea:	be 01       	movw	r22, r28
     3ec:	6f 5d       	subi	r22, 0xDF	; 223
     3ee:	7f 4f       	sbci	r23, 0xFF	; 255
     3f0:	84 e0       	ldi	r24, 0x04	; 4
     3f2:	62 df       	rcall	.-316    	; 0x2b8 <LCD_Custom_Char>
     3f4:	be 01       	movw	r22, r28
     3f6:	67 5d       	subi	r22, 0xD7	; 215
     3f8:	7f 4f       	sbci	r23, 0xFF	; 255
     3fa:	85 e0       	ldi	r24, 0x05	; 5
     3fc:	5d df       	rcall	.-326    	; 0x2b8 <LCD_Custom_Char>
     3fe:	e0 96       	adiw	r28, 0x30	; 48
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	08 95       	ret

00000410 <obstacleSpawnTop>:
     410:	e0 91 95 02 	lds	r30, 0x0295	; 0x800295 <tCount>
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	cf 01       	movw	r24, r30
     418:	88 0f       	add	r24, r24
     41a:	99 1f       	adc	r25, r25
     41c:	e8 0f       	add	r30, r24
     41e:	f9 1f       	adc	r31, r25
     420:	ef 51       	subi	r30, 0x1F	; 31
     422:	fe 4f       	sbci	r31, 0xFE	; 254
     424:	83 e1       	ldi	r24, 0x13	; 19
     426:	80 83       	st	Z, r24
     428:	11 82       	std	Z+1, r1	; 0x01
     42a:	4a e6       	ldi	r20, 0x6A	; 106
     42c:	51 e0       	ldi	r21, 0x01	; 1
     42e:	63 e1       	ldi	r22, 0x13	; 19
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	05 cf       	rjmp	.-502    	; 0x23e <LCD_String_xy>
     434:	08 95       	ret

00000436 <obstacleSpawnBottom>:
     436:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <bCount>
     43a:	f0 e0       	ldi	r31, 0x00	; 0
     43c:	cf 01       	movw	r24, r30
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	e8 0f       	add	r30, r24
     444:	f9 1f       	adc	r31, r25
     446:	e5 5c       	subi	r30, 0xC5	; 197
     448:	fd 4f       	sbci	r31, 0xFD	; 253
     44a:	83 e1       	ldi	r24, 0x13	; 19
     44c:	80 83       	st	Z, r24
     44e:	83 e0       	ldi	r24, 0x03	; 3
     450:	81 83       	std	Z+1, r24	; 0x01
     452:	4c e6       	ldi	r20, 0x6C	; 108
     454:	51 e0       	ldi	r21, 0x01	; 1
     456:	63 e1       	ldi	r22, 0x13	; 19
     458:	f2 ce       	rjmp	.-540    	; 0x23e <LCD_String_xy>
     45a:	08 95       	ret

0000045c <obstacleSpawnDecider>:
     45c:	48 d4       	rcall	.+2192   	; 0xcee <rand>
     45e:	62 e3       	ldi	r22, 0x32	; 50
     460:	70 e0       	ldi	r23, 0x00	; 0
     462:	d7 d3       	rcall	.+1966   	; 0xc12 <__divmodhi4>
     464:	80 fd       	sbrc	r24, 0
     466:	17 c0       	rjmp	.+46     	; 0x496 <obstacleSpawnDecider+0x3a>
     468:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <top>
     46c:	81 11       	cpse	r24, r1
     46e:	0a c0       	rjmp	.+20     	; 0x484 <obstacleSpawnDecider+0x28>
     470:	cf df       	rcall	.-98     	; 0x410 <obstacleSpawnTop>
     472:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <tCount>
     476:	8f 5f       	subi	r24, 0xFF	; 255
     478:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <tCount>
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <top>
     482:	08 95       	ret
     484:	d8 df       	rcall	.-80     	; 0x436 <obstacleSpawnBottom>
     486:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <bCount>
     48a:	8f 5f       	subi	r24, 0xFF	; 255
     48c:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <bCount>
     490:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <top>
     494:	08 95       	ret
     496:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <top>
     49a:	81 30       	cpi	r24, 0x01	; 1
     49c:	49 f4       	brne	.+18     	; 0x4b0 <obstacleSpawnDecider+0x54>
     49e:	cb df       	rcall	.-106    	; 0x436 <obstacleSpawnBottom>
     4a0:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <bCount>
     4a4:	8f 5f       	subi	r24, 0xFF	; 255
     4a6:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <bCount>
     4aa:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <top>
     4ae:	08 95       	ret
     4b0:	af df       	rcall	.-162    	; 0x410 <obstacleSpawnTop>
     4b2:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <tCount>
     4b6:	8f 5f       	subi	r24, 0xFF	; 255
     4b8:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <tCount>
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <top>
     4c2:	08 95       	ret

000004c4 <difficultyIncrease>:
     4c4:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <period>
     4c8:	84 32       	cpi	r24, 0x24	; 36
     4ca:	18 f0       	brcs	.+6      	; 0x4d2 <difficultyIncrease+0xe>
     4cc:	85 50       	subi	r24, 0x05	; 5
     4ce:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <period>
     4d2:	08 95       	ret

000004d4 <advanceTop>:
     4d4:	ff 92       	push	r15
     4d6:	0f 93       	push	r16
     4d8:	1f 93       	push	r17
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	07 d4       	rcall	.+2062   	; 0xcee <rand>
     4e0:	29 df       	rcall	.-430    	; 0x334 <initializeChar>
     4e2:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <tCount>
     4e6:	88 23       	and	r24, r24
     4e8:	99 f1       	breq	.+102    	; 0x550 <advanceTop+0x7c>
     4ea:	f1 2c       	mov	r15, r1
     4ec:	0f 2d       	mov	r16, r15
     4ee:	10 e0       	ldi	r17, 0x00	; 0
     4f0:	e8 01       	movw	r28, r16
     4f2:	cc 0f       	add	r28, r28
     4f4:	dd 1f       	adc	r29, r29
     4f6:	c0 0f       	add	r28, r16
     4f8:	d1 1f       	adc	r29, r17
     4fa:	cf 51       	subi	r28, 0x1F	; 31
     4fc:	de 4f       	sbci	r29, 0xFE	; 254
     4fe:	68 81       	ld	r22, Y
     500:	61 50       	subi	r22, 0x01	; 1
     502:	68 83       	st	Y, r22
     504:	4a e6       	ldi	r20, 0x6A	; 106
     506:	51 e0       	ldi	r21, 0x01	; 1
     508:	89 81       	ldd	r24, Y+1	; 0x01
     50a:	99 de       	rcall	.-718    	; 0x23e <LCD_String_xy>
     50c:	68 81       	ld	r22, Y
     50e:	63 31       	cpi	r22, 0x13	; 19
     510:	20 f4       	brcc	.+8      	; 0x51a <advanceTop+0x46>
     512:	6f 5f       	subi	r22, 0xFF	; 255
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	89 81       	ldd	r24, Y+1	; 0x01
     518:	e8 de       	rcall	.-560    	; 0x2ea <LCD_Custom_Pos>
     51a:	f8 01       	movw	r30, r16
     51c:	ee 0f       	add	r30, r30
     51e:	ff 1f       	adc	r31, r31
     520:	e0 0f       	add	r30, r16
     522:	f1 1f       	adc	r31, r17
     524:	ef 51       	subi	r30, 0x1F	; 31
     526:	fe 4f       	sbci	r31, 0xFE	; 254
     528:	80 81       	ld	r24, Z
     52a:	81 11       	cpse	r24, r1
     52c:	0c c0       	rjmp	.+24     	; 0x546 <advanceTop+0x72>
     52e:	f8 01       	movw	r30, r16
     530:	ee 0f       	add	r30, r30
     532:	ff 1f       	adc	r31, r31
     534:	0e 0f       	add	r16, r30
     536:	1f 1f       	adc	r17, r31
     538:	f8 01       	movw	r30, r16
     53a:	ef 51       	subi	r30, 0x1F	; 31
     53c:	fe 4f       	sbci	r31, 0xFE	; 254
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	81 81       	ldd	r24, Z+1	; 0x01
     544:	d2 de       	rcall	.-604    	; 0x2ea <LCD_Custom_Pos>
     546:	f3 94       	inc	r15
     548:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <tCount>
     54c:	f8 16       	cp	r15, r24
     54e:	70 f2       	brcs	.-100    	; 0x4ec <advanceTop+0x18>
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	1f 91       	pop	r17
     556:	0f 91       	pop	r16
     558:	ff 90       	pop	r15
     55a:	08 95       	ret

0000055c <advanceBottom>:
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	c3 d3       	rcall	.+1926   	; 0xcee <rand>
     568:	e5 de       	rcall	.-566    	; 0x334 <initializeChar>
     56a:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <bCount>
     56e:	88 23       	and	r24, r24
     570:	99 f1       	breq	.+102    	; 0x5d8 <advanceBottom+0x7c>
     572:	f1 2c       	mov	r15, r1
     574:	0f 2d       	mov	r16, r15
     576:	10 e0       	ldi	r17, 0x00	; 0
     578:	e8 01       	movw	r28, r16
     57a:	cc 0f       	add	r28, r28
     57c:	dd 1f       	adc	r29, r29
     57e:	c0 0f       	add	r28, r16
     580:	d1 1f       	adc	r29, r17
     582:	c5 5c       	subi	r28, 0xC5	; 197
     584:	dd 4f       	sbci	r29, 0xFD	; 253
     586:	68 81       	ld	r22, Y
     588:	61 50       	subi	r22, 0x01	; 1
     58a:	68 83       	st	Y, r22
     58c:	4c e6       	ldi	r20, 0x6C	; 108
     58e:	51 e0       	ldi	r21, 0x01	; 1
     590:	89 81       	ldd	r24, Y+1	; 0x01
     592:	55 de       	rcall	.-854    	; 0x23e <LCD_String_xy>
     594:	68 81       	ld	r22, Y
     596:	63 31       	cpi	r22, 0x13	; 19
     598:	20 f4       	brcc	.+8      	; 0x5a2 <advanceBottom+0x46>
     59a:	6f 5f       	subi	r22, 0xFF	; 255
     59c:	40 e0       	ldi	r20, 0x00	; 0
     59e:	89 81       	ldd	r24, Y+1	; 0x01
     5a0:	a4 de       	rcall	.-696    	; 0x2ea <LCD_Custom_Pos>
     5a2:	f8 01       	movw	r30, r16
     5a4:	ee 0f       	add	r30, r30
     5a6:	ff 1f       	adc	r31, r31
     5a8:	e0 0f       	add	r30, r16
     5aa:	f1 1f       	adc	r31, r17
     5ac:	e5 5c       	subi	r30, 0xC5	; 197
     5ae:	fd 4f       	sbci	r31, 0xFD	; 253
     5b0:	80 81       	ld	r24, Z
     5b2:	81 11       	cpse	r24, r1
     5b4:	0c c0       	rjmp	.+24     	; 0x5ce <advanceBottom+0x72>
     5b6:	f8 01       	movw	r30, r16
     5b8:	ee 0f       	add	r30, r30
     5ba:	ff 1f       	adc	r31, r31
     5bc:	0e 0f       	add	r16, r30
     5be:	1f 1f       	adc	r17, r31
     5c0:	f8 01       	movw	r30, r16
     5c2:	e5 5c       	subi	r30, 0xC5	; 197
     5c4:	fd 4f       	sbci	r31, 0xFD	; 253
     5c6:	40 e0       	ldi	r20, 0x00	; 0
     5c8:	60 e0       	ldi	r22, 0x00	; 0
     5ca:	81 81       	ldd	r24, Z+1	; 0x01
     5cc:	8e de       	rcall	.-740    	; 0x2ea <LCD_Custom_Pos>
     5ce:	f3 94       	inc	r15
     5d0:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <bCount>
     5d4:	f8 16       	cp	r15, r24
     5d6:	70 f2       	brcs	.-100    	; 0x574 <advanceBottom+0x18>
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	08 95       	ret

000005e4 <goDown>:
     5e4:	af 92       	push	r10
     5e6:	bf 92       	push	r11
     5e8:	cf 92       	push	r12
     5ea:	df 92       	push	r13
     5ec:	ef 92       	push	r14
     5ee:	ff 92       	push	r15
     5f0:	0f 93       	push	r16
     5f2:	1f 93       	push	r17
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
     5f8:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <switching>
     5fc:	81 30       	cpi	r24, 0x01	; 1
     5fe:	09 f0       	breq	.+2      	; 0x602 <goDown+0x1e>
     600:	48 c0       	rjmp	.+144    	; 0x692 <goDown+0xae>
     602:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <pos>
     606:	6a e0       	ldi	r22, 0x0A	; 10
     608:	70 e0       	ldi	r23, 0x00	; 0
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	bd dd       	rcall	.-1158   	; 0x18a <TimerSet>
     610:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     614:	81 11       	cpse	r24, r1
     616:	2b c0       	rjmp	.+86     	; 0x66e <goDown+0x8a>
     618:	3a c0       	rjmp	.+116    	; 0x68e <goDown+0xaa>
     61a:	86 01       	movw	r16, r12
     61c:	f5 01       	movw	r30, r10
     61e:	c0 83       	st	Z, r28
     620:	41 e0       	ldi	r20, 0x01	; 1
     622:	f7 01       	movw	r30, r14
     624:	60 81       	ld	r22, Z
     626:	8c 2f       	mov	r24, r28
     628:	60 de       	rcall	.-832    	; 0x2ea <LCD_Custom_Pos>
     62a:	cf 5f       	subi	r28, 0xFF	; 255
     62c:	c4 30       	cpi	r28, 0x04	; 4
     62e:	a9 f7       	brne	.-22     	; 0x61a <goDown+0x36>
     630:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <TimerFlag>
     634:	88 23       	and	r24, r24
     636:	e1 f3       	breq	.-8      	; 0x630 <goDown+0x4c>
     638:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <TimerFlag>
     63c:	c0 e0       	ldi	r28, 0x00	; 0
     63e:	00 0f       	add	r16, r16
     640:	11 1f       	adc	r17, r17
     642:	08 54       	subi	r16, 0x48	; 72
     644:	1e 4f       	sbci	r17, 0xFE	; 254
     646:	78 01       	movw	r14, r16
     648:	ff ef       	ldi	r31, 0xFF	; 255
     64a:	ef 1a       	sub	r14, r31
     64c:	ff 0a       	sbc	r15, r31
     64e:	f7 01       	movw	r30, r14
     650:	c0 83       	st	Z, r28
     652:	40 e0       	ldi	r20, 0x00	; 0
     654:	f8 01       	movw	r30, r16
     656:	60 81       	ld	r22, Z
     658:	8c 2f       	mov	r24, r28
     65a:	47 de       	rcall	.-882    	; 0x2ea <LCD_Custom_Pos>
     65c:	cf 5f       	subi	r28, 0xFF	; 255
     65e:	c4 30       	cpi	r28, 0x04	; 4
     660:	b1 f7       	brne	.-20     	; 0x64e <goDown+0x6a>
     662:	df 5f       	subi	r29, 0xFF	; 255
     664:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     668:	d8 17       	cp	r29, r24
     66a:	10 f0       	brcs	.+4      	; 0x670 <goDown+0x8c>
     66c:	10 c0       	rjmp	.+32     	; 0x68e <goDown+0xaa>
     66e:	d0 e0       	ldi	r29, 0x00	; 0
     670:	c0 e0       	ldi	r28, 0x00	; 0
     672:	cd 2e       	mov	r12, r29
     674:	d1 2c       	mov	r13, r1
     676:	c6 01       	movw	r24, r12
     678:	88 0f       	add	r24, r24
     67a:	99 1f       	adc	r25, r25
     67c:	9c 01       	movw	r18, r24
     67e:	28 54       	subi	r18, 0x48	; 72
     680:	3e 4f       	sbci	r19, 0xFE	; 254
     682:	79 01       	movw	r14, r18
     684:	59 01       	movw	r10, r18
     686:	3f ef       	ldi	r19, 0xFF	; 255
     688:	a3 1a       	sub	r10, r19
     68a:	b3 0a       	sbc	r11, r19
     68c:	c6 cf       	rjmp	.-116    	; 0x61a <goDown+0x36>
     68e:	22 df       	rcall	.-444    	; 0x4d4 <advanceTop>
     690:	65 df       	rcall	.-310    	; 0x55c <advanceBottom>
     692:	df 91       	pop	r29
     694:	cf 91       	pop	r28
     696:	1f 91       	pop	r17
     698:	0f 91       	pop	r16
     69a:	ff 90       	pop	r15
     69c:	ef 90       	pop	r14
     69e:	df 90       	pop	r13
     6a0:	cf 90       	pop	r12
     6a2:	bf 90       	pop	r11
     6a4:	af 90       	pop	r10
     6a6:	08 95       	ret

000006a8 <goUp>:
     6a8:	af 92       	push	r10
     6aa:	bf 92       	push	r11
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	ef 92       	push	r14
     6b2:	ff 92       	push	r15
     6b4:	0f 93       	push	r16
     6b6:	1f 93       	push	r17
     6b8:	cf 93       	push	r28
     6ba:	df 93       	push	r29
     6bc:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <switching>
     6c0:	81 30       	cpi	r24, 0x01	; 1
     6c2:	09 f0       	breq	.+2      	; 0x6c6 <goUp+0x1e>
     6c4:	48 c0       	rjmp	.+144    	; 0x756 <goUp+0xae>
     6c6:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <pos>
     6ca:	6a e0       	ldi	r22, 0x0A	; 10
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	5b dd       	rcall	.-1354   	; 0x18a <TimerSet>
     6d4:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     6d8:	81 11       	cpse	r24, r1
     6da:	2b c0       	rjmp	.+86     	; 0x732 <goUp+0x8a>
     6dc:	3a c0       	rjmp	.+116    	; 0x752 <goUp+0xaa>
     6de:	86 01       	movw	r16, r12
     6e0:	c1 50       	subi	r28, 0x01	; 1
     6e2:	f5 01       	movw	r30, r10
     6e4:	c0 83       	st	Z, r28
     6e6:	41 e0       	ldi	r20, 0x01	; 1
     6e8:	f7 01       	movw	r30, r14
     6ea:	60 81       	ld	r22, Z
     6ec:	8c 2f       	mov	r24, r28
     6ee:	fd dd       	rcall	.-1030   	; 0x2ea <LCD_Custom_Pos>
     6f0:	c1 11       	cpse	r28, r1
     6f2:	f5 cf       	rjmp	.-22     	; 0x6de <goUp+0x36>
     6f4:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <TimerFlag>
     6f8:	88 23       	and	r24, r24
     6fa:	e1 f3       	breq	.-8      	; 0x6f4 <goUp+0x4c>
     6fc:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <TimerFlag>
     700:	c4 e0       	ldi	r28, 0x04	; 4
     702:	00 0f       	add	r16, r16
     704:	11 1f       	adc	r17, r17
     706:	08 54       	subi	r16, 0x48	; 72
     708:	1e 4f       	sbci	r17, 0xFE	; 254
     70a:	78 01       	movw	r14, r16
     70c:	ff ef       	ldi	r31, 0xFF	; 255
     70e:	ef 1a       	sub	r14, r31
     710:	ff 0a       	sbc	r15, r31
     712:	c1 50       	subi	r28, 0x01	; 1
     714:	f7 01       	movw	r30, r14
     716:	c0 83       	st	Z, r28
     718:	40 e0       	ldi	r20, 0x00	; 0
     71a:	f8 01       	movw	r30, r16
     71c:	60 81       	ld	r22, Z
     71e:	8c 2f       	mov	r24, r28
     720:	e4 dd       	rcall	.-1080   	; 0x2ea <LCD_Custom_Pos>
     722:	c1 11       	cpse	r28, r1
     724:	f6 cf       	rjmp	.-20     	; 0x712 <goUp+0x6a>
     726:	df 5f       	subi	r29, 0xFF	; 255
     728:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     72c:	d8 17       	cp	r29, r24
     72e:	10 f0       	brcs	.+4      	; 0x734 <goUp+0x8c>
     730:	10 c0       	rjmp	.+32     	; 0x752 <goUp+0xaa>
     732:	d0 e0       	ldi	r29, 0x00	; 0
     734:	c4 e0       	ldi	r28, 0x04	; 4
     736:	cd 2e       	mov	r12, r29
     738:	d1 2c       	mov	r13, r1
     73a:	c6 01       	movw	r24, r12
     73c:	88 0f       	add	r24, r24
     73e:	99 1f       	adc	r25, r25
     740:	9c 01       	movw	r18, r24
     742:	28 54       	subi	r18, 0x48	; 72
     744:	3e 4f       	sbci	r19, 0xFE	; 254
     746:	79 01       	movw	r14, r18
     748:	59 01       	movw	r10, r18
     74a:	3f ef       	ldi	r19, 0xFF	; 255
     74c:	a3 1a       	sub	r10, r19
     74e:	b3 0a       	sbc	r11, r19
     750:	c6 cf       	rjmp	.-116    	; 0x6de <goUp+0x36>
     752:	c0 de       	rcall	.-640    	; 0x4d4 <advanceTop>
     754:	03 df       	rcall	.-506    	; 0x55c <advanceBottom>
     756:	df 91       	pop	r29
     758:	cf 91       	pop	r28
     75a:	1f 91       	pop	r17
     75c:	0f 91       	pop	r16
     75e:	ff 90       	pop	r15
     760:	ef 90       	pop	r14
     762:	df 90       	pop	r13
     764:	cf 90       	pop	r12
     766:	bf 90       	pop	r11
     768:	af 90       	pop	r10
     76a:	08 95       	ret

0000076c <ADC_Init>:


void ADC_Init()
{
	DDRA = 0x00;		/* Make ADC port as input */
     76c:	11 b8       	out	0x01, r1	; 1
	ADCSRA = 0x87;		/* Enable ADC, fr/128  */
     76e:	87 e8       	ldi	r24, 0x87	; 135
     770:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADMUX = 0x40;		/* Vref: Avcc, ADC channel: 0 */
     774:	80 e4       	ldi	r24, 0x40	; 64
     776:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     77a:	08 95       	ret

0000077c <ADC_Read>:

int ADC_Read(char channel)
{
	int ADC_value;
	
	ADMUX = (0x40) | (channel & 0x07);/* set input channel to read */
     77c:	87 70       	andi	r24, 0x07	; 7
     77e:	80 64       	ori	r24, 0x40	; 64
     780:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= (1<<ADSC);	/* start conversion */
     784:	ea e7       	ldi	r30, 0x7A	; 122
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	80 81       	ld	r24, Z
     78a:	80 64       	ori	r24, 0x40	; 64
     78c:	80 83       	st	Z, r24
	while((ADCSRA &(1<<ADIF))== 0);	/* monitor end of conversion interrupt flag */
     78e:	80 81       	ld	r24, Z
     790:	84 ff       	sbrs	r24, 4
     792:	fd cf       	rjmp	.-6      	; 0x78e <ADC_Read+0x12>
	
	ADCSRA |= (1<<ADIF);	/* clear interrupt flag */
     794:	ea e7       	ldi	r30, 0x7A	; 122
     796:	f0 e0       	ldi	r31, 0x00	; 0
     798:	80 81       	ld	r24, Z
     79a:	80 61       	ori	r24, 0x10	; 16
     79c:	80 83       	st	Z, r24
	ADC_value = (int)ADCL;	/* read lower byte */
     79e:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	ADC_value = ADC_value + (int)ADCH*256;/* read higher 2 bits, Multiply with weightage */
     7a2:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>

	return ADC_value;		/* return digital value */
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	98 2f       	mov	r25, r24
     7aa:	88 27       	eor	r24, r24
}
     7ac:	82 0f       	add	r24, r18
     7ae:	91 1d       	adc	r25, r1
     7b0:	08 95       	ret

000007b2 <generateHead>:
	
}; */

void generateHead(){
	
	body[length].x = shift;
     7b2:	e0 91 b3 01 	lds	r30, 0x01B3	; 0x8001b3 <length>
     7b6:	f0 e0       	ldi	r31, 0x00	; 0
     7b8:	ee 0f       	add	r30, r30
     7ba:	ff 1f       	adc	r31, r31
     7bc:	e8 54       	subi	r30, 0x48	; 72
     7be:	fe 4f       	sbci	r31, 0xFE	; 254
     7c0:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     7c4:	80 83       	st	Z, r24
	body[length].y = 0;
     7c6:	11 82       	std	Z+1, r1	; 0x01
     7c8:	08 95       	ret

000007ca <generateBody>:
	
};

void generateBody(){
	if (iff == 1){
     7ca:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <iff>
     7ce:	81 30       	cpi	r24, 0x01	; 1
     7d0:	61 f4       	brne	.+24     	; 0x7ea <generateBody+0x20>
	//body[index].after = spot;
	body[length].x = shift;
     7d2:	e0 91 b3 01 	lds	r30, 0x01B3	; 0x8001b3 <length>
     7d6:	f0 e0       	ldi	r31, 0x00	; 0
     7d8:	ee 0f       	add	r30, r30
     7da:	ff 1f       	adc	r31, r31
     7dc:	e8 54       	subi	r30, 0x48	; 72
     7de:	fe 4f       	sbci	r31, 0xFE	; 254
     7e0:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     7e4:	80 83       	st	Z, r24
	body[length].y = 0;
     7e6:	11 82       	std	Z+1, r1	; 0x01
     7e8:	08 95       	ret
	} else {
	body[length].x = shift;
     7ea:	e0 91 b3 01 	lds	r30, 0x01B3	; 0x8001b3 <length>
     7ee:	f0 e0       	ldi	r31, 0x00	; 0
     7f0:	ee 0f       	add	r30, r30
     7f2:	ff 1f       	adc	r31, r31
     7f4:	e8 54       	subi	r30, 0x48	; 72
     7f6:	fe 4f       	sbci	r31, 0xFE	; 254
     7f8:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     7fc:	80 83       	st	Z, r24
	body[length].y = 3;
     7fe:	83 e0       	ldi	r24, 0x03	; 3
     800:	81 83       	std	Z+1, r24	; 0x01
     802:	08 95       	ret

00000804 <clearData>:
	
};

void clearData(){
	
	score = 0; //
     804:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <score+0x1>
     808:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <score>
	
	pos = 0;
     80c:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <pos>
	switching = 0;
     810:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <switching>
	length = 0; //if the length is greater than 7 = lose
     814:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <length>
	period = 75; //10 periods = 1 powerup spawns
     818:	8b e4       	ldi	r24, 0x4B	; 75
     81a:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <period>
	transitionTime = 0; // time it takes for the snake to go from top to bottom
     81e:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <transitionTime>
	top = 0;
     822:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <top>
	iff = 1;
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <iff>
	able = 0;
     82c:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <able>
	shift = 0;
     830:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <shift>
	blah = 0;
     834:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <blah>
	bCount = 0;
     838:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <bCount>
	tCount = 0;
     83c:	10 92 95 02 	sts	0x0295, r1	; 0x800295 <tCount>
	//memset(buffer, 0, sizeof(buffer));
	memset(topEnemies, 0, sizeof(topEnemies));
     840:	8a e5       	ldi	r24, 0x5A	; 90
     842:	e1 ee       	ldi	r30, 0xE1	; 225
     844:	f1 e0       	ldi	r31, 0x01	; 1
     846:	df 01       	movw	r26, r30
     848:	98 2f       	mov	r25, r24
     84a:	1d 92       	st	X+, r1
     84c:	9a 95       	dec	r25
     84e:	e9 f7       	brne	.-6      	; 0x84a <clearData+0x46>
	memset(bottomEnemies, 0, sizeof(bottomEnemies));
     850:	eb e3       	ldi	r30, 0x3B	; 59
     852:	f2 e0       	ldi	r31, 0x02	; 2
     854:	df 01       	movw	r26, r30
     856:	1d 92       	st	X+, r1
     858:	8a 95       	dec	r24
     85a:	e9 f7       	brne	.-6      	; 0x856 <clearData+0x52>
	character = 0;
     85c:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <character>
	
	DDRA = 0xFF; PORTA = 0xFF;
     860:	8f ef       	ldi	r24, 0xFF	; 255
     862:	81 b9       	out	0x01, r24	; 1
     864:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
     866:	84 b9       	out	0x04, r24	; 4
     868:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
     86a:	87 b9       	out	0x07, r24	; 7
     86c:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
     86e:	8a b9       	out	0x0a, r24	; 10
     870:	1b b8       	out	0x0b, r1	; 11

	LCD_Init();
     872:	bc dc       	rcall	.-1672   	; 0x1ec <LCD_Init>
	LCD_Clear();
     874:	19 dd       	rcall	.-1486   	; 0x2a8 <LCD_Clear>
     876:	68 ee       	ldi	r22, 0xE8	; 232
	
	TimerSet(1000);
     878:	73 e0       	ldi	r23, 0x03	; 3
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	85 dc       	rcall	.-1782   	; 0x18a <TimerSet>
	TimerOn();
     880:	24 cc       	rjmp	.-1976   	; 0xca <TimerOn>
     882:	08 95       	ret

00000884 <collideCheck>:
     884:	0f 93       	push	r16
}

void collideCheck(){
     886:	1f 93       	push	r17
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
	for (unsigned char hah = 0; hah < bCount; hah = hah + 1){
     88c:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <bCount>
     890:	88 23       	and	r24, r24
     892:	09 f4       	brne	.+2      	; 0x896 <collideCheck+0x12>
     894:	4b c0       	rjmp	.+150    	; 0x92c <collideCheck+0xa8>
     896:	10 e0       	ldi	r17, 0x00	; 0
		if ((body[blah].y == bottomEnemies[hah].y) && (body[blah].x == bottomEnemies[hah].x)){
			score = score - 1;
			shift = shift - 1;
			generateBody();
			length = length + 1;
			bottomEnemies[hah].x = 1;
     898:	01 e0       	ldi	r16, 0x01	; 1
	TimerOn();
}

void collideCheck(){
	for (unsigned char hah = 0; hah < bCount; hah = hah + 1){
		if ((body[blah].y == bottomEnemies[hah].y) && (body[blah].x == bottomEnemies[hah].x)){
     89a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <blah>
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	c1 2f       	mov	r28, r17
     8a2:	d0 e0       	ldi	r29, 0x00	; 0
     8a4:	dc 01       	movw	r26, r24
     8a6:	aa 0f       	add	r26, r26
     8a8:	bb 1f       	adc	r27, r27
     8aa:	a8 54       	subi	r26, 0x48	; 72
     8ac:	be 4f       	sbci	r27, 0xFE	; 254
     8ae:	fe 01       	movw	r30, r28
     8b0:	ee 0f       	add	r30, r30
     8b2:	ff 1f       	adc	r31, r31
     8b4:	ec 0f       	add	r30, r28
     8b6:	fd 1f       	adc	r31, r29
     8b8:	e5 5c       	subi	r30, 0xC5	; 197
     8ba:	fd 4f       	sbci	r31, 0xFD	; 253
     8bc:	11 96       	adiw	r26, 0x01	; 1
     8be:	3c 91       	ld	r19, X
     8c0:	11 97       	sbiw	r26, 0x01	; 1
     8c2:	21 81       	ldd	r18, Z+1	; 0x01
     8c4:	32 13       	cpse	r19, r18
     8c6:	2c c0       	rjmp	.+88     	; 0x920 <collideCheck+0x9c>
     8c8:	fd 01       	movw	r30, r26
     8ca:	de 01       	movw	r26, r28
     8cc:	aa 0f       	add	r26, r26
     8ce:	bb 1f       	adc	r27, r27
     8d0:	ac 0f       	add	r26, r28
     8d2:	bd 1f       	adc	r27, r29
     8d4:	a5 5c       	subi	r26, 0xC5	; 197
     8d6:	bd 4f       	sbci	r27, 0xFD	; 253
     8d8:	90 81       	ld	r25, Z
     8da:	8c 91       	ld	r24, X
     8dc:	98 13       	cpse	r25, r24
     8de:	20 c0       	rjmp	.+64     	; 0x920 <collideCheck+0x9c>
			score = score - 1;
     8e0:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <score>
     8e4:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <score+0x1>
     8e8:	01 97       	sbiw	r24, 0x01	; 1
     8ea:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <score+0x1>
     8ee:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <score>
			shift = shift - 1;
     8f2:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     8f6:	81 50       	subi	r24, 0x01	; 1
     8f8:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <shift>
			generateBody();
     8fc:	66 df       	rcall	.-308    	; 0x7ca <generateBody>
			length = length + 1;
     8fe:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     902:	8f 5f       	subi	r24, 0xFF	; 255
     904:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <length>
			bottomEnemies[hah].x = 1;
     908:	ce 01       	movw	r24, r28
     90a:	88 0f       	add	r24, r24
     90c:	99 1f       	adc	r25, r25
     90e:	c8 0f       	add	r28, r24
     910:	d9 1f       	adc	r29, r25
     912:	c5 5c       	subi	r28, 0xC5	; 197
     914:	dd 4f       	sbci	r29, 0xFD	; 253
     916:	08 83       	st	Y, r16
			LCD_Custom_Pos(bottomEnemies[hah].y, bottomEnemies[hah].x, 0);
     918:	40 e0       	ldi	r20, 0x00	; 0
     91a:	60 2f       	mov	r22, r16
     91c:	89 81       	ldd	r24, Y+1	; 0x01
     91e:	e5 dc       	rcall	.-1590   	; 0x2ea <LCD_Custom_Pos>
	TimerSet(1000);
	TimerOn();
}

void collideCheck(){
	for (unsigned char hah = 0; hah < bCount; hah = hah + 1){
     920:	1f 5f       	subi	r17, 0xFF	; 255
     922:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <bCount>
     926:	18 17       	cp	r17, r24
     928:	08 f4       	brcc	.+2      	; 0x92c <collideCheck+0xa8>
     92a:	b7 cf       	rjmp	.-146    	; 0x89a <collideCheck+0x16>
			bottomEnemies[hah].x = 1;
			LCD_Custom_Pos(bottomEnemies[hah].y, bottomEnemies[hah].x, 0);
		}
	}
	
	for (unsigned char hah = 0; hah < tCount; hah = hah + 1){
     92c:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <tCount>
     930:	88 23       	and	r24, r24
     932:	09 f4       	brne	.+2      	; 0x936 <collideCheck+0xb2>
     934:	4b c0       	rjmp	.+150    	; 0x9cc <collideCheck+0x148>
     936:	10 e0       	ldi	r17, 0x00	; 0
		if ((body[blah].y == topEnemies[hah].y) && (body[blah].x == topEnemies[hah].x)){
			score = score - 1;
			shift = shift - 1;
			generateBody();
			length = length + 1;
			topEnemies[hah].x = 1;
     938:	01 e0       	ldi	r16, 0x01	; 1
			LCD_Custom_Pos(bottomEnemies[hah].y, bottomEnemies[hah].x, 0);
		}
	}
	
	for (unsigned char hah = 0; hah < tCount; hah = hah + 1){
		if ((body[blah].y == topEnemies[hah].y) && (body[blah].x == topEnemies[hah].x)){
     93a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <blah>
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	c1 2f       	mov	r28, r17
     942:	d0 e0       	ldi	r29, 0x00	; 0
     944:	dc 01       	movw	r26, r24
     946:	aa 0f       	add	r26, r26
     948:	bb 1f       	adc	r27, r27
     94a:	a8 54       	subi	r26, 0x48	; 72
     94c:	be 4f       	sbci	r27, 0xFE	; 254
     94e:	fe 01       	movw	r30, r28
     950:	ee 0f       	add	r30, r30
     952:	ff 1f       	adc	r31, r31
     954:	ec 0f       	add	r30, r28
     956:	fd 1f       	adc	r31, r29
     958:	ef 51       	subi	r30, 0x1F	; 31
     95a:	fe 4f       	sbci	r31, 0xFE	; 254
     95c:	11 96       	adiw	r26, 0x01	; 1
     95e:	3c 91       	ld	r19, X
     960:	11 97       	sbiw	r26, 0x01	; 1
     962:	21 81       	ldd	r18, Z+1	; 0x01
     964:	32 13       	cpse	r19, r18
     966:	2c c0       	rjmp	.+88     	; 0x9c0 <collideCheck+0x13c>
     968:	fd 01       	movw	r30, r26
     96a:	de 01       	movw	r26, r28
     96c:	aa 0f       	add	r26, r26
     96e:	bb 1f       	adc	r27, r27
     970:	ac 0f       	add	r26, r28
     972:	bd 1f       	adc	r27, r29
     974:	af 51       	subi	r26, 0x1F	; 31
     976:	be 4f       	sbci	r27, 0xFE	; 254
     978:	90 81       	ld	r25, Z
     97a:	8c 91       	ld	r24, X
     97c:	98 13       	cpse	r25, r24
     97e:	20 c0       	rjmp	.+64     	; 0x9c0 <collideCheck+0x13c>
			score = score - 1;
     980:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <score>
     984:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <score+0x1>
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <score+0x1>
     98e:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <score>
			shift = shift - 1;
     992:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     996:	81 50       	subi	r24, 0x01	; 1
     998:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <shift>
			generateBody();
     99c:	16 df       	rcall	.-468    	; 0x7ca <generateBody>
			length = length + 1;
     99e:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     9a2:	8f 5f       	subi	r24, 0xFF	; 255
     9a4:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <length>
			topEnemies[hah].x = 1;
     9a8:	ce 01       	movw	r24, r28
     9aa:	88 0f       	add	r24, r24
     9ac:	99 1f       	adc	r25, r25
     9ae:	c8 0f       	add	r28, r24
     9b0:	d9 1f       	adc	r29, r25
     9b2:	cf 51       	subi	r28, 0x1F	; 31
     9b4:	de 4f       	sbci	r29, 0xFE	; 254
     9b6:	08 83       	st	Y, r16
			LCD_Custom_Pos(topEnemies[hah].y, topEnemies[hah].x, 0);
     9b8:	40 e0       	ldi	r20, 0x00	; 0
     9ba:	60 2f       	mov	r22, r16
     9bc:	89 81       	ldd	r24, Y+1	; 0x01
     9be:	95 dc       	rcall	.-1750   	; 0x2ea <LCD_Custom_Pos>
			bottomEnemies[hah].x = 1;
			LCD_Custom_Pos(bottomEnemies[hah].y, bottomEnemies[hah].x, 0);
		}
	}
	
	for (unsigned char hah = 0; hah < tCount; hah = hah + 1){
     9c0:	1f 5f       	subi	r17, 0xFF	; 255
     9c2:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <tCount>
     9c6:	18 17       	cp	r17, r24
     9c8:	08 f4       	brcc	.+2      	; 0x9cc <collideCheck+0x148>
     9ca:	b7 cf       	rjmp	.-146    	; 0x93a <collideCheck+0xb6>
			length = length + 1;
			topEnemies[hah].x = 1;
			LCD_Custom_Pos(topEnemies[hah].y, topEnemies[hah].x, 0);
		}
	}
}
     9cc:	df 91       	pop	r29
     9ce:	cf 91       	pop	r28
     9d0:	1f 91       	pop	r17
     9d2:	0f 91       	pop	r16
     9d4:	08 95       	ret

000009d6 <main>:
//**SNAKE BODY**//


int main()
{
	clearData();
     9d6:	16 df       	rcall	.-468    	; 0x804 <clearData>
	
	shift = 0;	
     9d8:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <shift>
	LCD_String("tis a game i think"); //hi there how's life?
     9dc:	8e e6       	ldi	r24, 0x6E	; 110
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	20 dc       	rcall	.-1984   	; 0x222 <LCD_String>
	shift = 9;
     9e2:	89 e0       	ldi	r24, 0x09	; 9
     9e4:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <shift>
	while(!TimerFlag);
     9e8:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <TimerFlag>
     9ec:	88 23       	and	r24, r24
     9ee:	e1 f3       	breq	.-8      	; 0x9e8 <main+0x12>
	TimerFlag = 0;
     9f0:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <TimerFlag>
	LCD_Clear();

	initializeChar();
     9f4:	59 dc       	rcall	.-1870   	; 0x2a8 <LCD_Clear>
     9f6:	9e dc       	rcall	.-1732   	; 0x334 <initializeChar>
	generateHead();
     9f8:	dc de       	rcall	.-584    	; 0x7b2 <generateHead>
     9fa:	e8 eb       	ldi	r30, 0xB8	; 184
	LCD_Custom_Pos(body[0].y, body[0].x, 1);
     9fc:	f1 e0       	ldi	r31, 0x01	; 1
     9fe:	41 e0       	ldi	r20, 0x01	; 1
     a00:	60 81       	ld	r22, Z
     a02:	81 81       	ldd	r24, Z+1	; 0x01
     a04:	72 dc       	rcall	.-1820   	; 0x2ea <LCD_Custom_Pos>
     a06:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
	length = length + 1;
     a0a:	8f 5f       	subi	r24, 0xFF	; 255
     a0c:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <length>
	unsigned char temp = 0;
	TimerSet(period);
     a10:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <period>
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	b7 db       	rcall	.-2194   	; 0x18a <TimerSet>
     a1c:	c0 e0       	ldi	r28, 0x00	; 0
	
	while(1){
		TimerSet(period);
     a1e:	dd ec       	ldi	r29, 0xCD	; 205
     a20:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <period>
     a24:	70 e0       	ldi	r23, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	90 e0       	ldi	r25, 0x00	; 0
		ADC_Init();		/* Initialize ADC */
     a2a:	af db       	rcall	.-2210   	; 0x18a <TimerSet>
		
		
		for (blah = 0; blah < length; blah = blah + 1){
     a2c:	9f de       	rcall	.-706    	; 0x76c <ADC_Init>
     a2e:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <blah>
     a32:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <length>
     a36:	88 23       	and	r24, r24
			transitioncheck();
     a38:	e9 f0       	breq	.+58     	; 0xa74 <main+0x9e>
     a3a:	9d d0       	rcall	.+314    	; 0xb76 <transitioncheck>
			initializeChar();
     a3c:	7b dc       	rcall	.-1802   	; 0x334 <initializeChar>
			LCD_Custom_Pos(body[blah].y, body[blah].x, 1);
     a3e:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <blah>
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	ee 0f       	add	r30, r30
     a46:	ff 1f       	adc	r31, r31
     a48:	e8 54       	subi	r30, 0x48	; 72
     a4a:	fe 4f       	sbci	r31, 0xFE	; 254
     a4c:	41 e0       	ldi	r20, 0x01	; 1
     a4e:	60 81       	ld	r22, Z
     a50:	81 81       	ldd	r24, Z+1	; 0x01
     a52:	4b dc       	rcall	.-1898   	; 0x2ea <LCD_Custom_Pos>
			collideCheck();
     a54:	17 df       	rcall	.-466    	; 0x884 <collideCheck>
     a56:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <TimerFlag>
						while(!TimerFlag);
     a5a:	88 23       	and	r24, r24
     a5c:	e1 f3       	breq	.-8      	; 0xa56 <main+0x80>
     a5e:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <TimerFlag>
						TimerFlag = 0;
     a62:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <blah>
	while(1){
		TimerSet(period);
		ADC_Init();		/* Initialize ADC */
		
		
		for (blah = 0; blah < length; blah = blah + 1){
     a66:	8f 5f       	subi	r24, 0xFF	; 255
     a68:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <blah>
     a6c:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <length>
			collideCheck();
						while(!TimerFlag);
						TimerFlag = 0;
			//LCD_String_xy(body[h].y, body[h].x, '\0');
		}
		TimerSet(period);
     a70:	89 17       	cp	r24, r25
     a72:	18 f3       	brcs	.-58     	; 0xa3a <main+0x64>
     a74:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <period>
     a78:	70 e0       	ldi	r23, 0x00	; 0
			transitioncheck();
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
			advanceBottom();
     a7e:	85 db       	rcall	.-2294   	; 0x18a <TimerSet>
     a80:	7a d0       	rcall	.+244    	; 0xb76 <transitioncheck>
			transitioncheck();
     a82:	6c dd       	rcall	.-1320   	; 0x55c <advanceBottom>
     a84:	78 d0       	rcall	.+240    	; 0xb76 <transitioncheck>
			advanceTop();
     a86:	26 dd       	rcall	.-1460   	; 0x4d4 <advanceTop>
     a88:	76 d0       	rcall	.+236    	; 0xb76 <transitioncheck>
			transitioncheck();
     a8a:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <TimerFlag>
			while(!TimerFlag);
     a8e:	88 23       	and	r24, r24
     a90:	e1 f3       	breq	.-8      	; 0xa8a <main+0xb4>
     a92:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <TimerFlag>
			TimerFlag = 0;
     a96:	cf 5f       	subi	r28, 0xFF	; 255
     a98:	6e d0       	rcall	.+220    	; 0xb76 <transitioncheck>
			temp = temp + 1;
     a9a:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <score>
			transitioncheck();
     a9e:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <score+0x1>
			score = score + 1;
     aa2:	01 96       	adiw	r24, 0x01	; 1
     aa4:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <score+0x1>
     aa8:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <score>
     aac:	cd 9f       	mul	r28, r29
     aae:	81 2d       	mov	r24, r1
			if (temp % 5 == 0){
     ab0:	11 24       	eor	r1, r1
     ab2:	86 95       	lsr	r24
     ab4:	86 95       	lsr	r24
     ab6:	98 2f       	mov	r25, r24
     ab8:	99 0f       	add	r25, r25
     aba:	99 0f       	add	r25, r25
     abc:	89 0f       	add	r24, r25
     abe:	c8 13       	cpse	r28, r24
     ac0:	01 c0       	rjmp	.+2      	; 0xac4 <main+0xee>
				obstacleSpawnDecider();
     ac2:	cc dc       	rcall	.-1640   	; 0x45c <obstacleSpawnDecider>
     ac4:	c0 ff       	sbrs	r28, 0
			}
			if (temp % 2){
     ac6:	0a c0       	rjmp	.+20     	; 0xadc <main+0x106>
     ac8:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <score>
				score = score + 1;
     acc:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <score+0x1>
     ad0:	01 96       	adiw	r24, 0x01	; 1
     ad2:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <score+0x1>
     ad6:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <score>
     ada:	f4 dc       	rcall	.-1560   	; 0x4c4 <difficultyIncrease>
				difficultyIncrease();
     adc:	4c d0       	rcall	.+152    	; 0xb76 <transitioncheck>
     ade:	a0 cf       	rjmp	.-192    	; 0xa20 <main+0x4a>

00000ae0 <losingScreen>:
			}
			transitioncheck();
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
			
	}
     ae4:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <shift>
	}
}

void losingScreen(){
	shift = 0;
	LCD_Command(0x01);
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	60 db       	rcall	.-2368   	; 0x1ac <LCD_Command>
	LCD_Clear();
     aec:	dd db       	rcall	.-2118   	; 0x2a8 <LCD_Clear>
     aee:	41 e8       	ldi	r20, 0x81	; 129
	LCD_String_xy(0, 0, "You lose!");
     af0:	51 e0       	ldi	r21, 0x01	; 1
     af2:	60 e0       	ldi	r22, 0x00	; 0
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	a3 db       	rcall	.-2234   	; 0x23e <LCD_String_xy>
     af8:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <score+0x1>
	sprintf(buffer, "Score: %d   ", score);
     afc:	8f 93       	push	r24
     afe:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <score>
     b02:	8f 93       	push	r24
     b04:	8b e8       	ldi	r24, 0x8B	; 139
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	9f 93       	push	r25
     b0a:	8f 93       	push	r24
     b0c:	cd ec       	ldi	r28, 0xCD	; 205
     b0e:	d1 e0       	ldi	r29, 0x01	; 1
     b10:	df 93       	push	r29
     b12:	cf 93       	push	r28
     b14:	fa d0       	rcall	.+500    	; 0xd0a <sprintf>
     b16:	ae 01       	movw	r20, r28
	LCD_String_xy(2, 0, buffer);
     b18:	60 e0       	ldi	r22, 0x00	; 0
     b1a:	82 e0       	ldi	r24, 0x02	; 2
     b1c:	90 db       	rcall	.-2272   	; 0x23e <LCD_String_xy>
     b1e:	60 91 b6 01 	lds	r22, 0x01B6	; 0x8001b6 <score>
	eeprom_write_byte(0, score);
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	d4 d3       	rcall	.+1960   	; 0x12d0 <eeprom_write_byte>
     b28:	80 e0       	ldi	r24, 0x00	; 0
	unsigned char high;
	high = eeprom_read_byte(0);
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	c9 d3       	rcall	.+1938   	; 0x12c0 <eeprom_read_byte>
     b2e:	1f 92       	push	r1
     b30:	8f 93       	push	r24
	sprintf(buffer, "High Score: %d", high);
     b32:	88 e9       	ldi	r24, 0x98	; 152
     b34:	91 e0       	ldi	r25, 0x01	; 1
     b36:	9f 93       	push	r25
     b38:	8f 93       	push	r24
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	e5 d0       	rcall	.+458    	; 0xd0a <sprintf>
     b40:	ae 01       	movw	r20, r28
	LCD_String_xy(3, 0, buffer);
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	83 e0       	ldi	r24, 0x03	; 3
     b46:	7b db       	rcall	.-2314   	; 0x23e <LCD_String_xy>
     b48:	60 e0       	ldi	r22, 0x00	; 0
	TimerSet(1000000000);
     b4a:	7a ec       	ldi	r23, 0xCA	; 202
     b4c:	8a e9       	ldi	r24, 0x9A	; 154
     b4e:	9b e3       	ldi	r25, 0x3B	; 59
     b50:	1c db       	rcall	.-2504   	; 0x18a <TimerSet>
     b52:	8d b7       	in	r24, 0x3d	; 61
     b54:	9e b7       	in	r25, 0x3e	; 62
	while (TimerFlag){
     b56:	0c 96       	adiw	r24, 0x0c	; 12
     b58:	0f b6       	in	r0, 0x3f	; 63
     b5a:	f8 94       	cli
     b5c:	9e bf       	out	0x3e, r25	; 62
     b5e:	0f be       	out	0x3f, r0	; 63
     b60:	8d bf       	out	0x3d, r24	; 61
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <losingScreen+0x88>
     b64:	03 9b       	sbis	0x00, 3	; 0
		if (~PINA & 0x08){
     b66:	37 df       	rcall	.-402    	; 0x9d6 <main>
			main();
     b68:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <TimerFlag>
	unsigned char high;
	high = eeprom_read_byte(0);
	sprintf(buffer, "High Score: %d", high);
	LCD_String_xy(3, 0, buffer);
	TimerSet(1000000000);
	while (TimerFlag){
     b6c:	81 11       	cpse	r24, r1
     b6e:	fa cf       	rjmp	.-12     	; 0xb64 <losingScreen+0x84>
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
		if (~PINA & 0x08){
			main();
		}
	}
}
     b74:	08 95       	ret

00000b76 <transitioncheck>:
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
}

void transitioncheck(){
//caase statementz
	int ADC_Value;
	ADC_Value = ADC_Read(1);
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	ff dd       	rcall	.-1026   	; 0x77c <ADC_Read>
     b7e:	ec 01       	movw	r28, r24
	
	if (~PINA & 0x08){
     b80:	03 99       	sbic	0x00, 3	; 0
		losingScreen();
     b82:	03 c0       	rjmp	.+6      	; 0xb8a <transitioncheck+0x14>
     b84:	ad df       	rcall	.-166    	; 0xae0 <losingScreen>
		able = 0;
     b86:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <able>
	}
	
	if (~PINA & 0x64){
     b8a:	80 b1       	in	r24, 0x00	; 0
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	80 95       	com	r24
     b90:	90 95       	com	r25
     b92:	84 76       	andi	r24, 0x64	; 100
     b94:	99 27       	eor	r25, r25
     b96:	89 2b       	or	r24, r25
     b98:	19 f0       	breq	.+6      	; 0xba0 <transitioncheck+0x2a>
		able = 2;
     b9a:	82 e0       	ldi	r24, 0x02	; 2
     b9c:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <able>
	}
	if (ADC_Value > 120){
     ba0:	c9 37       	cpi	r28, 0x79	; 121
     ba2:	d1 05       	cpc	r29, r1
     ba4:	1c f0       	brlt	.+6      	; 0xbac <transitioncheck+0x36>
		able = 3;
     ba6:	83 e0       	ldi	r24, 0x03	; 3
     ba8:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <able>
	}
	if (ADC_Value < 90){
     bac:	ca 35       	cpi	r28, 0x5A	; 90
     bae:	d1 05       	cpc	r29, r1
     bb0:	44 f4       	brge	.+16     	; 0xbc2 <transitioncheck+0x4c>
		able = 4;
     bb2:	84 e0       	ldi	r24, 0x04	; 4
     bb4:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <able>
	}
	if (shift <= 0){
     bb8:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     bbc:	81 11       	cpse	r24, r1
     bbe:	1c c0       	rjmp	.+56     	; 0xbf8 <transitioncheck+0x82>
     bc0:	04 c0       	rjmp	.+8      	; 0xbca <transitioncheck+0x54>
     bc2:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <shift>
     bc6:	81 11       	cpse	r24, r1
		losingScreen();
     bc8:	01 c0       	rjmp	.+2      	; 0xbcc <transitioncheck+0x56>
     bca:	8a df       	rcall	.-236    	; 0xae0 <losingScreen>
	}

	if (able == 3){
     bcc:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <able>
     bd0:	83 30       	cpi	r24, 0x03	; 3
     bd2:	71 f4       	brne	.+28     	; 0xbf0 <transitioncheck+0x7a>
		if (iff == 1){
     bd4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <iff>
     bd8:	81 30       	cpi	r24, 0x01	; 1
			switching = 1;
     bda:	39 f4       	brne	.+14     	; 0xbea <transitioncheck+0x74>
     bdc:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <switching>
			goDown();
     be0:	01 dd       	rcall	.-1534   	; 0x5e4 <goDown>
			switching = 0;
     be2:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <switching>
			iff = 0;
     be6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <iff>
			able = 0;
		} 
		able = 0;
     bea:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <able>
     bee:	0e c0       	rjmp	.+28     	; 0xc0c <transitioncheck+0x96>
	}
	if (able == 4){
     bf0:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <able>
     bf4:	84 30       	cpi	r24, 0x04	; 4
		{
			switching = 1;
     bf6:	51 f4       	brne	.+20     	; 0xc0c <transitioncheck+0x96>
     bf8:	c1 e0       	ldi	r28, 0x01	; 1
     bfa:	c0 93 b4 01 	sts	0x01B4, r28	; 0x8001b4 <switching>
			goUp();
     bfe:	54 dd       	rcall	.-1368   	; 0x6a8 <goUp>
			switching = 0;
     c00:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <switching>
			iff = 1;
     c04:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <iff>
			able = 0;
     c08:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <able>
		*/
		//TimerSet(period);
		//able = 0;
	}
	
}
     c0c:	df 91       	pop	r29
     c0e:	cf 91       	pop	r28
     c10:	08 95       	ret

00000c12 <__divmodhi4>:
     c12:	97 fb       	bst	r25, 7
     c14:	07 2e       	mov	r0, r23
     c16:	16 f4       	brtc	.+4      	; 0xc1c <__divmodhi4+0xa>
     c18:	00 94       	com	r0
     c1a:	06 d0       	rcall	.+12     	; 0xc28 <__divmodhi4_neg1>
     c1c:	77 fd       	sbrc	r23, 7
     c1e:	08 d0       	rcall	.+16     	; 0xc30 <__divmodhi4_neg2>
     c20:	0b d0       	rcall	.+22     	; 0xc38 <__udivmodhi4>
     c22:	07 fc       	sbrc	r0, 7
     c24:	05 d0       	rcall	.+10     	; 0xc30 <__divmodhi4_neg2>
     c26:	3e f4       	brtc	.+14     	; 0xc36 <__divmodhi4_exit>

00000c28 <__divmodhi4_neg1>:
     c28:	90 95       	com	r25
     c2a:	81 95       	neg	r24
     c2c:	9f 4f       	sbci	r25, 0xFF	; 255
     c2e:	08 95       	ret

00000c30 <__divmodhi4_neg2>:
     c30:	70 95       	com	r23
     c32:	61 95       	neg	r22
     c34:	7f 4f       	sbci	r23, 0xFF	; 255

00000c36 <__divmodhi4_exit>:
     c36:	08 95       	ret

00000c38 <__udivmodhi4>:
     c38:	aa 1b       	sub	r26, r26
     c3a:	bb 1b       	sub	r27, r27
     c3c:	51 e1       	ldi	r21, 0x11	; 17
     c3e:	07 c0       	rjmp	.+14     	; 0xc4e <__udivmodhi4_ep>

00000c40 <__udivmodhi4_loop>:
     c40:	aa 1f       	adc	r26, r26
     c42:	bb 1f       	adc	r27, r27
     c44:	a6 17       	cp	r26, r22
     c46:	b7 07       	cpc	r27, r23
     c48:	10 f0       	brcs	.+4      	; 0xc4e <__udivmodhi4_ep>
     c4a:	a6 1b       	sub	r26, r22
     c4c:	b7 0b       	sbc	r27, r23

00000c4e <__udivmodhi4_ep>:
     c4e:	88 1f       	adc	r24, r24
     c50:	99 1f       	adc	r25, r25
     c52:	5a 95       	dec	r21
     c54:	a9 f7       	brne	.-22     	; 0xc40 <__udivmodhi4_loop>
     c56:	80 95       	com	r24
     c58:	90 95       	com	r25
     c5a:	bc 01       	movw	r22, r24
     c5c:	cd 01       	movw	r24, r26
     c5e:	08 95       	ret

00000c60 <do_rand>:
     c60:	8f 92       	push	r8
     c62:	9f 92       	push	r9
     c64:	af 92       	push	r10
     c66:	bf 92       	push	r11
     c68:	cf 92       	push	r12
     c6a:	df 92       	push	r13
     c6c:	ef 92       	push	r14
     c6e:	ff 92       	push	r15
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	ec 01       	movw	r28, r24
     c76:	68 81       	ld	r22, Y
     c78:	79 81       	ldd	r23, Y+1	; 0x01
     c7a:	8a 81       	ldd	r24, Y+2	; 0x02
     c7c:	9b 81       	ldd	r25, Y+3	; 0x03
     c7e:	61 15       	cp	r22, r1
     c80:	71 05       	cpc	r23, r1
     c82:	81 05       	cpc	r24, r1
     c84:	91 05       	cpc	r25, r1
     c86:	21 f4       	brne	.+8      	; 0xc90 <do_rand+0x30>
     c88:	64 e2       	ldi	r22, 0x24	; 36
     c8a:	79 ed       	ldi	r23, 0xD9	; 217
     c8c:	8b e5       	ldi	r24, 0x5B	; 91
     c8e:	97 e0       	ldi	r25, 0x07	; 7
     c90:	2d e1       	ldi	r18, 0x1D	; 29
     c92:	33 ef       	ldi	r19, 0xF3	; 243
     c94:	41 e0       	ldi	r20, 0x01	; 1
     c96:	50 e0       	ldi	r21, 0x00	; 0
     c98:	29 d3       	rcall	.+1618   	; 0x12ec <__divmodsi4>
     c9a:	49 01       	movw	r8, r18
     c9c:	5a 01       	movw	r10, r20
     c9e:	9b 01       	movw	r18, r22
     ca0:	ac 01       	movw	r20, r24
     ca2:	a7 ea       	ldi	r26, 0xA7	; 167
     ca4:	b1 e4       	ldi	r27, 0x41	; 65
     ca6:	3e d3       	rcall	.+1660   	; 0x1324 <__muluhisi3>
     ca8:	6b 01       	movw	r12, r22
     caa:	7c 01       	movw	r14, r24
     cac:	ac ee       	ldi	r26, 0xEC	; 236
     cae:	b4 ef       	ldi	r27, 0xF4	; 244
     cb0:	a5 01       	movw	r20, r10
     cb2:	94 01       	movw	r18, r8
     cb4:	43 d3       	rcall	.+1670   	; 0x133c <__mulohisi3>
     cb6:	dc 01       	movw	r26, r24
     cb8:	cb 01       	movw	r24, r22
     cba:	8c 0d       	add	r24, r12
     cbc:	9d 1d       	adc	r25, r13
     cbe:	ae 1d       	adc	r26, r14
     cc0:	bf 1d       	adc	r27, r15
     cc2:	b7 ff       	sbrs	r27, 7
     cc4:	03 c0       	rjmp	.+6      	; 0xccc <do_rand+0x6c>
     cc6:	01 97       	sbiw	r24, 0x01	; 1
     cc8:	a1 09       	sbc	r26, r1
     cca:	b0 48       	sbci	r27, 0x80	; 128
     ccc:	88 83       	st	Y, r24
     cce:	99 83       	std	Y+1, r25	; 0x01
     cd0:	aa 83       	std	Y+2, r26	; 0x02
     cd2:	bb 83       	std	Y+3, r27	; 0x03
     cd4:	9f 77       	andi	r25, 0x7F	; 127
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	bf 90       	pop	r11
     ce4:	af 90       	pop	r10
     ce6:	9f 90       	pop	r9
     ce8:	8f 90       	pop	r8
     cea:	08 95       	ret

00000cec <rand_r>:
     cec:	b9 cf       	rjmp	.-142    	; 0xc60 <do_rand>

00000cee <rand>:
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	91 e0       	ldi	r25, 0x01	; 1
     cf2:	b6 cf       	rjmp	.-148    	; 0xc60 <do_rand>

00000cf4 <srand>:
     cf4:	a0 e0       	ldi	r26, 0x00	; 0
     cf6:	b0 e0       	ldi	r27, 0x00	; 0
     cf8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     cfc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     d00:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     d04:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     d08:	08 95       	ret

00000d0a <sprintf>:
     d0a:	0f 93       	push	r16
     d0c:	1f 93       	push	r17
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
     d16:	2e 97       	sbiw	r28, 0x0e	; 14
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	de bf       	out	0x3e, r29	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	cd bf       	out	0x3d, r28	; 61
     d22:	0d 89       	ldd	r16, Y+21	; 0x15
     d24:	1e 89       	ldd	r17, Y+22	; 0x16
     d26:	86 e0       	ldi	r24, 0x06	; 6
     d28:	8c 83       	std	Y+4, r24	; 0x04
     d2a:	1a 83       	std	Y+2, r17	; 0x02
     d2c:	09 83       	std	Y+1, r16	; 0x01
     d2e:	8f ef       	ldi	r24, 0xFF	; 255
     d30:	9f e7       	ldi	r25, 0x7F	; 127
     d32:	9e 83       	std	Y+6, r25	; 0x06
     d34:	8d 83       	std	Y+5, r24	; 0x05
     d36:	ae 01       	movw	r20, r28
     d38:	47 5e       	subi	r20, 0xE7	; 231
     d3a:	5f 4f       	sbci	r21, 0xFF	; 255
     d3c:	6f 89       	ldd	r22, Y+23	; 0x17
     d3e:	78 8d       	ldd	r23, Y+24	; 0x18
     d40:	ce 01       	movw	r24, r28
     d42:	01 96       	adiw	r24, 0x01	; 1
     d44:	10 d0       	rcall	.+32     	; 0xd66 <vfprintf>
     d46:	ef 81       	ldd	r30, Y+7	; 0x07
     d48:	f8 85       	ldd	r31, Y+8	; 0x08
     d4a:	e0 0f       	add	r30, r16
     d4c:	f1 1f       	adc	r31, r17
     d4e:	10 82       	st	Z, r1
     d50:	2e 96       	adiw	r28, 0x0e	; 14
     d52:	0f b6       	in	r0, 0x3f	; 63
     d54:	f8 94       	cli
     d56:	de bf       	out	0x3e, r29	; 62
     d58:	0f be       	out	0x3f, r0	; 63
     d5a:	cd bf       	out	0x3d, r28	; 61
     d5c:	df 91       	pop	r29
     d5e:	cf 91       	pop	r28
     d60:	1f 91       	pop	r17
     d62:	0f 91       	pop	r16
     d64:	08 95       	ret

00000d66 <vfprintf>:
     d66:	2f 92       	push	r2
     d68:	3f 92       	push	r3
     d6a:	4f 92       	push	r4
     d6c:	5f 92       	push	r5
     d6e:	6f 92       	push	r6
     d70:	7f 92       	push	r7
     d72:	8f 92       	push	r8
     d74:	9f 92       	push	r9
     d76:	af 92       	push	r10
     d78:	bf 92       	push	r11
     d7a:	cf 92       	push	r12
     d7c:	df 92       	push	r13
     d7e:	ef 92       	push	r14
     d80:	ff 92       	push	r15
     d82:	0f 93       	push	r16
     d84:	1f 93       	push	r17
     d86:	cf 93       	push	r28
     d88:	df 93       	push	r29
     d8a:	cd b7       	in	r28, 0x3d	; 61
     d8c:	de b7       	in	r29, 0x3e	; 62
     d8e:	2b 97       	sbiw	r28, 0x0b	; 11
     d90:	0f b6       	in	r0, 0x3f	; 63
     d92:	f8 94       	cli
     d94:	de bf       	out	0x3e, r29	; 62
     d96:	0f be       	out	0x3f, r0	; 63
     d98:	cd bf       	out	0x3d, r28	; 61
     d9a:	6c 01       	movw	r12, r24
     d9c:	7b 01       	movw	r14, r22
     d9e:	8a 01       	movw	r16, r20
     da0:	fc 01       	movw	r30, r24
     da2:	17 82       	std	Z+7, r1	; 0x07
     da4:	16 82       	std	Z+6, r1	; 0x06
     da6:	83 81       	ldd	r24, Z+3	; 0x03
     da8:	81 ff       	sbrs	r24, 1
     daa:	bf c1       	rjmp	.+894    	; 0x112a <vfprintf+0x3c4>
     dac:	ce 01       	movw	r24, r28
     dae:	01 96       	adiw	r24, 0x01	; 1
     db0:	3c 01       	movw	r6, r24
     db2:	f6 01       	movw	r30, r12
     db4:	93 81       	ldd	r25, Z+3	; 0x03
     db6:	f7 01       	movw	r30, r14
     db8:	93 fd       	sbrc	r25, 3
     dba:	85 91       	lpm	r24, Z+
     dbc:	93 ff       	sbrs	r25, 3
     dbe:	81 91       	ld	r24, Z+
     dc0:	7f 01       	movw	r14, r30
     dc2:	88 23       	and	r24, r24
     dc4:	09 f4       	brne	.+2      	; 0xdc8 <vfprintf+0x62>
     dc6:	ad c1       	rjmp	.+858    	; 0x1122 <vfprintf+0x3bc>
     dc8:	85 32       	cpi	r24, 0x25	; 37
     dca:	39 f4       	brne	.+14     	; 0xdda <vfprintf+0x74>
     dcc:	93 fd       	sbrc	r25, 3
     dce:	85 91       	lpm	r24, Z+
     dd0:	93 ff       	sbrs	r25, 3
     dd2:	81 91       	ld	r24, Z+
     dd4:	7f 01       	movw	r14, r30
     dd6:	85 32       	cpi	r24, 0x25	; 37
     dd8:	21 f4       	brne	.+8      	; 0xde2 <vfprintf+0x7c>
     dda:	b6 01       	movw	r22, r12
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	d6 d1       	rcall	.+940    	; 0x118c <fputc>
     de0:	e8 cf       	rjmp	.-48     	; 0xdb2 <vfprintf+0x4c>
     de2:	91 2c       	mov	r9, r1
     de4:	21 2c       	mov	r2, r1
     de6:	31 2c       	mov	r3, r1
     de8:	ff e1       	ldi	r31, 0x1F	; 31
     dea:	f3 15       	cp	r31, r3
     dec:	d8 f0       	brcs	.+54     	; 0xe24 <vfprintf+0xbe>
     dee:	8b 32       	cpi	r24, 0x2B	; 43
     df0:	79 f0       	breq	.+30     	; 0xe10 <vfprintf+0xaa>
     df2:	38 f4       	brcc	.+14     	; 0xe02 <vfprintf+0x9c>
     df4:	80 32       	cpi	r24, 0x20	; 32
     df6:	79 f0       	breq	.+30     	; 0xe16 <vfprintf+0xb0>
     df8:	83 32       	cpi	r24, 0x23	; 35
     dfa:	a1 f4       	brne	.+40     	; 0xe24 <vfprintf+0xbe>
     dfc:	23 2d       	mov	r18, r3
     dfe:	20 61       	ori	r18, 0x10	; 16
     e00:	1d c0       	rjmp	.+58     	; 0xe3c <vfprintf+0xd6>
     e02:	8d 32       	cpi	r24, 0x2D	; 45
     e04:	61 f0       	breq	.+24     	; 0xe1e <vfprintf+0xb8>
     e06:	80 33       	cpi	r24, 0x30	; 48
     e08:	69 f4       	brne	.+26     	; 0xe24 <vfprintf+0xbe>
     e0a:	23 2d       	mov	r18, r3
     e0c:	21 60       	ori	r18, 0x01	; 1
     e0e:	16 c0       	rjmp	.+44     	; 0xe3c <vfprintf+0xd6>
     e10:	83 2d       	mov	r24, r3
     e12:	82 60       	ori	r24, 0x02	; 2
     e14:	38 2e       	mov	r3, r24
     e16:	e3 2d       	mov	r30, r3
     e18:	e4 60       	ori	r30, 0x04	; 4
     e1a:	3e 2e       	mov	r3, r30
     e1c:	2a c0       	rjmp	.+84     	; 0xe72 <vfprintf+0x10c>
     e1e:	f3 2d       	mov	r31, r3
     e20:	f8 60       	ori	r31, 0x08	; 8
     e22:	1d c0       	rjmp	.+58     	; 0xe5e <vfprintf+0xf8>
     e24:	37 fc       	sbrc	r3, 7
     e26:	2d c0       	rjmp	.+90     	; 0xe82 <vfprintf+0x11c>
     e28:	20 ed       	ldi	r18, 0xD0	; 208
     e2a:	28 0f       	add	r18, r24
     e2c:	2a 30       	cpi	r18, 0x0A	; 10
     e2e:	40 f0       	brcs	.+16     	; 0xe40 <vfprintf+0xda>
     e30:	8e 32       	cpi	r24, 0x2E	; 46
     e32:	b9 f4       	brne	.+46     	; 0xe62 <vfprintf+0xfc>
     e34:	36 fc       	sbrc	r3, 6
     e36:	75 c1       	rjmp	.+746    	; 0x1122 <vfprintf+0x3bc>
     e38:	23 2d       	mov	r18, r3
     e3a:	20 64       	ori	r18, 0x40	; 64
     e3c:	32 2e       	mov	r3, r18
     e3e:	19 c0       	rjmp	.+50     	; 0xe72 <vfprintf+0x10c>
     e40:	36 fe       	sbrs	r3, 6
     e42:	06 c0       	rjmp	.+12     	; 0xe50 <vfprintf+0xea>
     e44:	8a e0       	ldi	r24, 0x0A	; 10
     e46:	98 9e       	mul	r9, r24
     e48:	20 0d       	add	r18, r0
     e4a:	11 24       	eor	r1, r1
     e4c:	92 2e       	mov	r9, r18
     e4e:	11 c0       	rjmp	.+34     	; 0xe72 <vfprintf+0x10c>
     e50:	ea e0       	ldi	r30, 0x0A	; 10
     e52:	2e 9e       	mul	r2, r30
     e54:	20 0d       	add	r18, r0
     e56:	11 24       	eor	r1, r1
     e58:	22 2e       	mov	r2, r18
     e5a:	f3 2d       	mov	r31, r3
     e5c:	f0 62       	ori	r31, 0x20	; 32
     e5e:	3f 2e       	mov	r3, r31
     e60:	08 c0       	rjmp	.+16     	; 0xe72 <vfprintf+0x10c>
     e62:	8c 36       	cpi	r24, 0x6C	; 108
     e64:	21 f4       	brne	.+8      	; 0xe6e <vfprintf+0x108>
     e66:	83 2d       	mov	r24, r3
     e68:	80 68       	ori	r24, 0x80	; 128
     e6a:	38 2e       	mov	r3, r24
     e6c:	02 c0       	rjmp	.+4      	; 0xe72 <vfprintf+0x10c>
     e6e:	88 36       	cpi	r24, 0x68	; 104
     e70:	41 f4       	brne	.+16     	; 0xe82 <vfprintf+0x11c>
     e72:	f7 01       	movw	r30, r14
     e74:	93 fd       	sbrc	r25, 3
     e76:	85 91       	lpm	r24, Z+
     e78:	93 ff       	sbrs	r25, 3
     e7a:	81 91       	ld	r24, Z+
     e7c:	7f 01       	movw	r14, r30
     e7e:	81 11       	cpse	r24, r1
     e80:	b3 cf       	rjmp	.-154    	; 0xde8 <vfprintf+0x82>
     e82:	98 2f       	mov	r25, r24
     e84:	9f 7d       	andi	r25, 0xDF	; 223
     e86:	95 54       	subi	r25, 0x45	; 69
     e88:	93 30       	cpi	r25, 0x03	; 3
     e8a:	28 f4       	brcc	.+10     	; 0xe96 <vfprintf+0x130>
     e8c:	0c 5f       	subi	r16, 0xFC	; 252
     e8e:	1f 4f       	sbci	r17, 0xFF	; 255
     e90:	9f e3       	ldi	r25, 0x3F	; 63
     e92:	99 83       	std	Y+1, r25	; 0x01
     e94:	0d c0       	rjmp	.+26     	; 0xeb0 <vfprintf+0x14a>
     e96:	83 36       	cpi	r24, 0x63	; 99
     e98:	31 f0       	breq	.+12     	; 0xea6 <vfprintf+0x140>
     e9a:	83 37       	cpi	r24, 0x73	; 115
     e9c:	71 f0       	breq	.+28     	; 0xeba <vfprintf+0x154>
     e9e:	83 35       	cpi	r24, 0x53	; 83
     ea0:	09 f0       	breq	.+2      	; 0xea4 <vfprintf+0x13e>
     ea2:	55 c0       	rjmp	.+170    	; 0xf4e <vfprintf+0x1e8>
     ea4:	20 c0       	rjmp	.+64     	; 0xee6 <vfprintf+0x180>
     ea6:	f8 01       	movw	r30, r16
     ea8:	80 81       	ld	r24, Z
     eaa:	89 83       	std	Y+1, r24	; 0x01
     eac:	0e 5f       	subi	r16, 0xFE	; 254
     eae:	1f 4f       	sbci	r17, 0xFF	; 255
     eb0:	88 24       	eor	r8, r8
     eb2:	83 94       	inc	r8
     eb4:	91 2c       	mov	r9, r1
     eb6:	53 01       	movw	r10, r6
     eb8:	12 c0       	rjmp	.+36     	; 0xede <vfprintf+0x178>
     eba:	28 01       	movw	r4, r16
     ebc:	f2 e0       	ldi	r31, 0x02	; 2
     ebe:	4f 0e       	add	r4, r31
     ec0:	51 1c       	adc	r5, r1
     ec2:	f8 01       	movw	r30, r16
     ec4:	a0 80       	ld	r10, Z
     ec6:	b1 80       	ldd	r11, Z+1	; 0x01
     ec8:	36 fe       	sbrs	r3, 6
     eca:	03 c0       	rjmp	.+6      	; 0xed2 <vfprintf+0x16c>
     ecc:	69 2d       	mov	r22, r9
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <vfprintf+0x170>
     ed2:	6f ef       	ldi	r22, 0xFF	; 255
     ed4:	7f ef       	ldi	r23, 0xFF	; 255
     ed6:	c5 01       	movw	r24, r10
     ed8:	4e d1       	rcall	.+668    	; 0x1176 <strnlen>
     eda:	4c 01       	movw	r8, r24
     edc:	82 01       	movw	r16, r4
     ede:	f3 2d       	mov	r31, r3
     ee0:	ff 77       	andi	r31, 0x7F	; 127
     ee2:	3f 2e       	mov	r3, r31
     ee4:	15 c0       	rjmp	.+42     	; 0xf10 <vfprintf+0x1aa>
     ee6:	28 01       	movw	r4, r16
     ee8:	22 e0       	ldi	r18, 0x02	; 2
     eea:	42 0e       	add	r4, r18
     eec:	51 1c       	adc	r5, r1
     eee:	f8 01       	movw	r30, r16
     ef0:	a0 80       	ld	r10, Z
     ef2:	b1 80       	ldd	r11, Z+1	; 0x01
     ef4:	36 fe       	sbrs	r3, 6
     ef6:	03 c0       	rjmp	.+6      	; 0xefe <vfprintf+0x198>
     ef8:	69 2d       	mov	r22, r9
     efa:	70 e0       	ldi	r23, 0x00	; 0
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <vfprintf+0x19c>
     efe:	6f ef       	ldi	r22, 0xFF	; 255
     f00:	7f ef       	ldi	r23, 0xFF	; 255
     f02:	c5 01       	movw	r24, r10
     f04:	2d d1       	rcall	.+602    	; 0x1160 <strnlen_P>
     f06:	4c 01       	movw	r8, r24
     f08:	f3 2d       	mov	r31, r3
     f0a:	f0 68       	ori	r31, 0x80	; 128
     f0c:	3f 2e       	mov	r3, r31
     f0e:	82 01       	movw	r16, r4
     f10:	33 fc       	sbrc	r3, 3
     f12:	19 c0       	rjmp	.+50     	; 0xf46 <vfprintf+0x1e0>
     f14:	82 2d       	mov	r24, r2
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	88 16       	cp	r8, r24
     f1a:	99 06       	cpc	r9, r25
     f1c:	a0 f4       	brcc	.+40     	; 0xf46 <vfprintf+0x1e0>
     f1e:	b6 01       	movw	r22, r12
     f20:	80 e2       	ldi	r24, 0x20	; 32
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	33 d1       	rcall	.+614    	; 0x118c <fputc>
     f26:	2a 94       	dec	r2
     f28:	f5 cf       	rjmp	.-22     	; 0xf14 <vfprintf+0x1ae>
     f2a:	f5 01       	movw	r30, r10
     f2c:	37 fc       	sbrc	r3, 7
     f2e:	85 91       	lpm	r24, Z+
     f30:	37 fe       	sbrs	r3, 7
     f32:	81 91       	ld	r24, Z+
     f34:	5f 01       	movw	r10, r30
     f36:	b6 01       	movw	r22, r12
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	28 d1       	rcall	.+592    	; 0x118c <fputc>
     f3c:	21 10       	cpse	r2, r1
     f3e:	2a 94       	dec	r2
     f40:	21 e0       	ldi	r18, 0x01	; 1
     f42:	82 1a       	sub	r8, r18
     f44:	91 08       	sbc	r9, r1
     f46:	81 14       	cp	r8, r1
     f48:	91 04       	cpc	r9, r1
     f4a:	79 f7       	brne	.-34     	; 0xf2a <vfprintf+0x1c4>
     f4c:	e1 c0       	rjmp	.+450    	; 0x1110 <vfprintf+0x3aa>
     f4e:	84 36       	cpi	r24, 0x64	; 100
     f50:	11 f0       	breq	.+4      	; 0xf56 <vfprintf+0x1f0>
     f52:	89 36       	cpi	r24, 0x69	; 105
     f54:	39 f5       	brne	.+78     	; 0xfa4 <vfprintf+0x23e>
     f56:	f8 01       	movw	r30, r16
     f58:	37 fe       	sbrs	r3, 7
     f5a:	07 c0       	rjmp	.+14     	; 0xf6a <vfprintf+0x204>
     f5c:	60 81       	ld	r22, Z
     f5e:	71 81       	ldd	r23, Z+1	; 0x01
     f60:	82 81       	ldd	r24, Z+2	; 0x02
     f62:	93 81       	ldd	r25, Z+3	; 0x03
     f64:	0c 5f       	subi	r16, 0xFC	; 252
     f66:	1f 4f       	sbci	r17, 0xFF	; 255
     f68:	08 c0       	rjmp	.+16     	; 0xf7a <vfprintf+0x214>
     f6a:	60 81       	ld	r22, Z
     f6c:	71 81       	ldd	r23, Z+1	; 0x01
     f6e:	07 2e       	mov	r0, r23
     f70:	00 0c       	add	r0, r0
     f72:	88 0b       	sbc	r24, r24
     f74:	99 0b       	sbc	r25, r25
     f76:	0e 5f       	subi	r16, 0xFE	; 254
     f78:	1f 4f       	sbci	r17, 0xFF	; 255
     f7a:	f3 2d       	mov	r31, r3
     f7c:	ff 76       	andi	r31, 0x6F	; 111
     f7e:	3f 2e       	mov	r3, r31
     f80:	97 ff       	sbrs	r25, 7
     f82:	09 c0       	rjmp	.+18     	; 0xf96 <vfprintf+0x230>
     f84:	90 95       	com	r25
     f86:	80 95       	com	r24
     f88:	70 95       	com	r23
     f8a:	61 95       	neg	r22
     f8c:	7f 4f       	sbci	r23, 0xFF	; 255
     f8e:	8f 4f       	sbci	r24, 0xFF	; 255
     f90:	9f 4f       	sbci	r25, 0xFF	; 255
     f92:	f0 68       	ori	r31, 0x80	; 128
     f94:	3f 2e       	mov	r3, r31
     f96:	2a e0       	ldi	r18, 0x0A	; 10
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	a3 01       	movw	r20, r6
     f9c:	33 d1       	rcall	.+614    	; 0x1204 <__ultoa_invert>
     f9e:	88 2e       	mov	r8, r24
     fa0:	86 18       	sub	r8, r6
     fa2:	44 c0       	rjmp	.+136    	; 0x102c <vfprintf+0x2c6>
     fa4:	85 37       	cpi	r24, 0x75	; 117
     fa6:	31 f4       	brne	.+12     	; 0xfb4 <vfprintf+0x24e>
     fa8:	23 2d       	mov	r18, r3
     faa:	2f 7e       	andi	r18, 0xEF	; 239
     fac:	b2 2e       	mov	r11, r18
     fae:	2a e0       	ldi	r18, 0x0A	; 10
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	25 c0       	rjmp	.+74     	; 0xffe <vfprintf+0x298>
     fb4:	93 2d       	mov	r25, r3
     fb6:	99 7f       	andi	r25, 0xF9	; 249
     fb8:	b9 2e       	mov	r11, r25
     fba:	8f 36       	cpi	r24, 0x6F	; 111
     fbc:	c1 f0       	breq	.+48     	; 0xfee <vfprintf+0x288>
     fbe:	18 f4       	brcc	.+6      	; 0xfc6 <vfprintf+0x260>
     fc0:	88 35       	cpi	r24, 0x58	; 88
     fc2:	79 f0       	breq	.+30     	; 0xfe2 <vfprintf+0x27c>
     fc4:	ae c0       	rjmp	.+348    	; 0x1122 <vfprintf+0x3bc>
     fc6:	80 37       	cpi	r24, 0x70	; 112
     fc8:	19 f0       	breq	.+6      	; 0xfd0 <vfprintf+0x26a>
     fca:	88 37       	cpi	r24, 0x78	; 120
     fcc:	21 f0       	breq	.+8      	; 0xfd6 <vfprintf+0x270>
     fce:	a9 c0       	rjmp	.+338    	; 0x1122 <vfprintf+0x3bc>
     fd0:	e9 2f       	mov	r30, r25
     fd2:	e0 61       	ori	r30, 0x10	; 16
     fd4:	be 2e       	mov	r11, r30
     fd6:	b4 fe       	sbrs	r11, 4
     fd8:	0d c0       	rjmp	.+26     	; 0xff4 <vfprintf+0x28e>
     fda:	fb 2d       	mov	r31, r11
     fdc:	f4 60       	ori	r31, 0x04	; 4
     fde:	bf 2e       	mov	r11, r31
     fe0:	09 c0       	rjmp	.+18     	; 0xff4 <vfprintf+0x28e>
     fe2:	34 fe       	sbrs	r3, 4
     fe4:	0a c0       	rjmp	.+20     	; 0xffa <vfprintf+0x294>
     fe6:	29 2f       	mov	r18, r25
     fe8:	26 60       	ori	r18, 0x06	; 6
     fea:	b2 2e       	mov	r11, r18
     fec:	06 c0       	rjmp	.+12     	; 0xffa <vfprintf+0x294>
     fee:	28 e0       	ldi	r18, 0x08	; 8
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	05 c0       	rjmp	.+10     	; 0xffe <vfprintf+0x298>
     ff4:	20 e1       	ldi	r18, 0x10	; 16
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <vfprintf+0x298>
     ffa:	20 e1       	ldi	r18, 0x10	; 16
     ffc:	32 e0       	ldi	r19, 0x02	; 2
     ffe:	f8 01       	movw	r30, r16
    1000:	b7 fe       	sbrs	r11, 7
    1002:	07 c0       	rjmp	.+14     	; 0x1012 <vfprintf+0x2ac>
    1004:	60 81       	ld	r22, Z
    1006:	71 81       	ldd	r23, Z+1	; 0x01
    1008:	82 81       	ldd	r24, Z+2	; 0x02
    100a:	93 81       	ldd	r25, Z+3	; 0x03
    100c:	0c 5f       	subi	r16, 0xFC	; 252
    100e:	1f 4f       	sbci	r17, 0xFF	; 255
    1010:	06 c0       	rjmp	.+12     	; 0x101e <vfprintf+0x2b8>
    1012:	60 81       	ld	r22, Z
    1014:	71 81       	ldd	r23, Z+1	; 0x01
    1016:	80 e0       	ldi	r24, 0x00	; 0
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 5f       	subi	r16, 0xFE	; 254
    101c:	1f 4f       	sbci	r17, 0xFF	; 255
    101e:	a3 01       	movw	r20, r6
    1020:	f1 d0       	rcall	.+482    	; 0x1204 <__ultoa_invert>
    1022:	88 2e       	mov	r8, r24
    1024:	86 18       	sub	r8, r6
    1026:	fb 2d       	mov	r31, r11
    1028:	ff 77       	andi	r31, 0x7F	; 127
    102a:	3f 2e       	mov	r3, r31
    102c:	36 fe       	sbrs	r3, 6
    102e:	0d c0       	rjmp	.+26     	; 0x104a <vfprintf+0x2e4>
    1030:	23 2d       	mov	r18, r3
    1032:	2e 7f       	andi	r18, 0xFE	; 254
    1034:	a2 2e       	mov	r10, r18
    1036:	89 14       	cp	r8, r9
    1038:	58 f4       	brcc	.+22     	; 0x1050 <vfprintf+0x2ea>
    103a:	34 fe       	sbrs	r3, 4
    103c:	0b c0       	rjmp	.+22     	; 0x1054 <vfprintf+0x2ee>
    103e:	32 fc       	sbrc	r3, 2
    1040:	09 c0       	rjmp	.+18     	; 0x1054 <vfprintf+0x2ee>
    1042:	83 2d       	mov	r24, r3
    1044:	8e 7e       	andi	r24, 0xEE	; 238
    1046:	a8 2e       	mov	r10, r24
    1048:	05 c0       	rjmp	.+10     	; 0x1054 <vfprintf+0x2ee>
    104a:	b8 2c       	mov	r11, r8
    104c:	a3 2c       	mov	r10, r3
    104e:	03 c0       	rjmp	.+6      	; 0x1056 <vfprintf+0x2f0>
    1050:	b8 2c       	mov	r11, r8
    1052:	01 c0       	rjmp	.+2      	; 0x1056 <vfprintf+0x2f0>
    1054:	b9 2c       	mov	r11, r9
    1056:	a4 fe       	sbrs	r10, 4
    1058:	0f c0       	rjmp	.+30     	; 0x1078 <vfprintf+0x312>
    105a:	fe 01       	movw	r30, r28
    105c:	e8 0d       	add	r30, r8
    105e:	f1 1d       	adc	r31, r1
    1060:	80 81       	ld	r24, Z
    1062:	80 33       	cpi	r24, 0x30	; 48
    1064:	21 f4       	brne	.+8      	; 0x106e <vfprintf+0x308>
    1066:	9a 2d       	mov	r25, r10
    1068:	99 7e       	andi	r25, 0xE9	; 233
    106a:	a9 2e       	mov	r10, r25
    106c:	09 c0       	rjmp	.+18     	; 0x1080 <vfprintf+0x31a>
    106e:	a2 fe       	sbrs	r10, 2
    1070:	06 c0       	rjmp	.+12     	; 0x107e <vfprintf+0x318>
    1072:	b3 94       	inc	r11
    1074:	b3 94       	inc	r11
    1076:	04 c0       	rjmp	.+8      	; 0x1080 <vfprintf+0x31a>
    1078:	8a 2d       	mov	r24, r10
    107a:	86 78       	andi	r24, 0x86	; 134
    107c:	09 f0       	breq	.+2      	; 0x1080 <vfprintf+0x31a>
    107e:	b3 94       	inc	r11
    1080:	a3 fc       	sbrc	r10, 3
    1082:	10 c0       	rjmp	.+32     	; 0x10a4 <vfprintf+0x33e>
    1084:	a0 fe       	sbrs	r10, 0
    1086:	06 c0       	rjmp	.+12     	; 0x1094 <vfprintf+0x32e>
    1088:	b2 14       	cp	r11, r2
    108a:	80 f4       	brcc	.+32     	; 0x10ac <vfprintf+0x346>
    108c:	28 0c       	add	r2, r8
    108e:	92 2c       	mov	r9, r2
    1090:	9b 18       	sub	r9, r11
    1092:	0d c0       	rjmp	.+26     	; 0x10ae <vfprintf+0x348>
    1094:	b2 14       	cp	r11, r2
    1096:	58 f4       	brcc	.+22     	; 0x10ae <vfprintf+0x348>
    1098:	b6 01       	movw	r22, r12
    109a:	80 e2       	ldi	r24, 0x20	; 32
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	76 d0       	rcall	.+236    	; 0x118c <fputc>
    10a0:	b3 94       	inc	r11
    10a2:	f8 cf       	rjmp	.-16     	; 0x1094 <vfprintf+0x32e>
    10a4:	b2 14       	cp	r11, r2
    10a6:	18 f4       	brcc	.+6      	; 0x10ae <vfprintf+0x348>
    10a8:	2b 18       	sub	r2, r11
    10aa:	02 c0       	rjmp	.+4      	; 0x10b0 <vfprintf+0x34a>
    10ac:	98 2c       	mov	r9, r8
    10ae:	21 2c       	mov	r2, r1
    10b0:	a4 fe       	sbrs	r10, 4
    10b2:	0f c0       	rjmp	.+30     	; 0x10d2 <vfprintf+0x36c>
    10b4:	b6 01       	movw	r22, r12
    10b6:	80 e3       	ldi	r24, 0x30	; 48
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	68 d0       	rcall	.+208    	; 0x118c <fputc>
    10bc:	a2 fe       	sbrs	r10, 2
    10be:	16 c0       	rjmp	.+44     	; 0x10ec <vfprintf+0x386>
    10c0:	a1 fc       	sbrc	r10, 1
    10c2:	03 c0       	rjmp	.+6      	; 0x10ca <vfprintf+0x364>
    10c4:	88 e7       	ldi	r24, 0x78	; 120
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <vfprintf+0x368>
    10ca:	88 e5       	ldi	r24, 0x58	; 88
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	b6 01       	movw	r22, r12
    10d0:	0c c0       	rjmp	.+24     	; 0x10ea <vfprintf+0x384>
    10d2:	8a 2d       	mov	r24, r10
    10d4:	86 78       	andi	r24, 0x86	; 134
    10d6:	51 f0       	breq	.+20     	; 0x10ec <vfprintf+0x386>
    10d8:	a1 fe       	sbrs	r10, 1
    10da:	02 c0       	rjmp	.+4      	; 0x10e0 <vfprintf+0x37a>
    10dc:	8b e2       	ldi	r24, 0x2B	; 43
    10de:	01 c0       	rjmp	.+2      	; 0x10e2 <vfprintf+0x37c>
    10e0:	80 e2       	ldi	r24, 0x20	; 32
    10e2:	a7 fc       	sbrc	r10, 7
    10e4:	8d e2       	ldi	r24, 0x2D	; 45
    10e6:	b6 01       	movw	r22, r12
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	50 d0       	rcall	.+160    	; 0x118c <fputc>
    10ec:	89 14       	cp	r8, r9
    10ee:	30 f4       	brcc	.+12     	; 0x10fc <vfprintf+0x396>
    10f0:	b6 01       	movw	r22, r12
    10f2:	80 e3       	ldi	r24, 0x30	; 48
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	4a d0       	rcall	.+148    	; 0x118c <fputc>
    10f8:	9a 94       	dec	r9
    10fa:	f8 cf       	rjmp	.-16     	; 0x10ec <vfprintf+0x386>
    10fc:	8a 94       	dec	r8
    10fe:	f3 01       	movw	r30, r6
    1100:	e8 0d       	add	r30, r8
    1102:	f1 1d       	adc	r31, r1
    1104:	80 81       	ld	r24, Z
    1106:	b6 01       	movw	r22, r12
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	40 d0       	rcall	.+128    	; 0x118c <fputc>
    110c:	81 10       	cpse	r8, r1
    110e:	f6 cf       	rjmp	.-20     	; 0x10fc <vfprintf+0x396>
    1110:	22 20       	and	r2, r2
    1112:	09 f4       	brne	.+2      	; 0x1116 <vfprintf+0x3b0>
    1114:	4e ce       	rjmp	.-868    	; 0xdb2 <vfprintf+0x4c>
    1116:	b6 01       	movw	r22, r12
    1118:	80 e2       	ldi	r24, 0x20	; 32
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	37 d0       	rcall	.+110    	; 0x118c <fputc>
    111e:	2a 94       	dec	r2
    1120:	f7 cf       	rjmp	.-18     	; 0x1110 <vfprintf+0x3aa>
    1122:	f6 01       	movw	r30, r12
    1124:	86 81       	ldd	r24, Z+6	; 0x06
    1126:	97 81       	ldd	r25, Z+7	; 0x07
    1128:	02 c0       	rjmp	.+4      	; 0x112e <vfprintf+0x3c8>
    112a:	8f ef       	ldi	r24, 0xFF	; 255
    112c:	9f ef       	ldi	r25, 0xFF	; 255
    112e:	2b 96       	adiw	r28, 0x0b	; 11
    1130:	0f b6       	in	r0, 0x3f	; 63
    1132:	f8 94       	cli
    1134:	de bf       	out	0x3e, r29	; 62
    1136:	0f be       	out	0x3f, r0	; 63
    1138:	cd bf       	out	0x3d, r28	; 61
    113a:	df 91       	pop	r29
    113c:	cf 91       	pop	r28
    113e:	1f 91       	pop	r17
    1140:	0f 91       	pop	r16
    1142:	ff 90       	pop	r15
    1144:	ef 90       	pop	r14
    1146:	df 90       	pop	r13
    1148:	cf 90       	pop	r12
    114a:	bf 90       	pop	r11
    114c:	af 90       	pop	r10
    114e:	9f 90       	pop	r9
    1150:	8f 90       	pop	r8
    1152:	7f 90       	pop	r7
    1154:	6f 90       	pop	r6
    1156:	5f 90       	pop	r5
    1158:	4f 90       	pop	r4
    115a:	3f 90       	pop	r3
    115c:	2f 90       	pop	r2
    115e:	08 95       	ret

00001160 <strnlen_P>:
    1160:	fc 01       	movw	r30, r24
    1162:	05 90       	lpm	r0, Z+
    1164:	61 50       	subi	r22, 0x01	; 1
    1166:	70 40       	sbci	r23, 0x00	; 0
    1168:	01 10       	cpse	r0, r1
    116a:	d8 f7       	brcc	.-10     	; 0x1162 <strnlen_P+0x2>
    116c:	80 95       	com	r24
    116e:	90 95       	com	r25
    1170:	8e 0f       	add	r24, r30
    1172:	9f 1f       	adc	r25, r31
    1174:	08 95       	ret

00001176 <strnlen>:
    1176:	fc 01       	movw	r30, r24
    1178:	61 50       	subi	r22, 0x01	; 1
    117a:	70 40       	sbci	r23, 0x00	; 0
    117c:	01 90       	ld	r0, Z+
    117e:	01 10       	cpse	r0, r1
    1180:	d8 f7       	brcc	.-10     	; 0x1178 <strnlen+0x2>
    1182:	80 95       	com	r24
    1184:	90 95       	com	r25
    1186:	8e 0f       	add	r24, r30
    1188:	9f 1f       	adc	r25, r31
    118a:	08 95       	ret

0000118c <fputc>:
    118c:	0f 93       	push	r16
    118e:	1f 93       	push	r17
    1190:	cf 93       	push	r28
    1192:	df 93       	push	r29
    1194:	fb 01       	movw	r30, r22
    1196:	23 81       	ldd	r18, Z+3	; 0x03
    1198:	21 fd       	sbrc	r18, 1
    119a:	03 c0       	rjmp	.+6      	; 0x11a2 <fputc+0x16>
    119c:	8f ef       	ldi	r24, 0xFF	; 255
    119e:	9f ef       	ldi	r25, 0xFF	; 255
    11a0:	2c c0       	rjmp	.+88     	; 0x11fa <fputc+0x6e>
    11a2:	22 ff       	sbrs	r18, 2
    11a4:	16 c0       	rjmp	.+44     	; 0x11d2 <fputc+0x46>
    11a6:	46 81       	ldd	r20, Z+6	; 0x06
    11a8:	57 81       	ldd	r21, Z+7	; 0x07
    11aa:	24 81       	ldd	r18, Z+4	; 0x04
    11ac:	35 81       	ldd	r19, Z+5	; 0x05
    11ae:	42 17       	cp	r20, r18
    11b0:	53 07       	cpc	r21, r19
    11b2:	44 f4       	brge	.+16     	; 0x11c4 <fputc+0x38>
    11b4:	a0 81       	ld	r26, Z
    11b6:	b1 81       	ldd	r27, Z+1	; 0x01
    11b8:	9d 01       	movw	r18, r26
    11ba:	2f 5f       	subi	r18, 0xFF	; 255
    11bc:	3f 4f       	sbci	r19, 0xFF	; 255
    11be:	31 83       	std	Z+1, r19	; 0x01
    11c0:	20 83       	st	Z, r18
    11c2:	8c 93       	st	X, r24
    11c4:	26 81       	ldd	r18, Z+6	; 0x06
    11c6:	37 81       	ldd	r19, Z+7	; 0x07
    11c8:	2f 5f       	subi	r18, 0xFF	; 255
    11ca:	3f 4f       	sbci	r19, 0xFF	; 255
    11cc:	37 83       	std	Z+7, r19	; 0x07
    11ce:	26 83       	std	Z+6, r18	; 0x06
    11d0:	14 c0       	rjmp	.+40     	; 0x11fa <fputc+0x6e>
    11d2:	8b 01       	movw	r16, r22
    11d4:	ec 01       	movw	r28, r24
    11d6:	fb 01       	movw	r30, r22
    11d8:	00 84       	ldd	r0, Z+8	; 0x08
    11da:	f1 85       	ldd	r31, Z+9	; 0x09
    11dc:	e0 2d       	mov	r30, r0
    11de:	09 95       	icall
    11e0:	89 2b       	or	r24, r25
    11e2:	e1 f6       	brne	.-72     	; 0x119c <fputc+0x10>
    11e4:	d8 01       	movw	r26, r16
    11e6:	16 96       	adiw	r26, 0x06	; 6
    11e8:	8d 91       	ld	r24, X+
    11ea:	9c 91       	ld	r25, X
    11ec:	17 97       	sbiw	r26, 0x07	; 7
    11ee:	01 96       	adiw	r24, 0x01	; 1
    11f0:	17 96       	adiw	r26, 0x07	; 7
    11f2:	9c 93       	st	X, r25
    11f4:	8e 93       	st	-X, r24
    11f6:	16 97       	sbiw	r26, 0x06	; 6
    11f8:	ce 01       	movw	r24, r28
    11fa:	df 91       	pop	r29
    11fc:	cf 91       	pop	r28
    11fe:	1f 91       	pop	r17
    1200:	0f 91       	pop	r16
    1202:	08 95       	ret

00001204 <__ultoa_invert>:
    1204:	fa 01       	movw	r30, r20
    1206:	aa 27       	eor	r26, r26
    1208:	28 30       	cpi	r18, 0x08	; 8
    120a:	51 f1       	breq	.+84     	; 0x1260 <__ultoa_invert+0x5c>
    120c:	20 31       	cpi	r18, 0x10	; 16
    120e:	81 f1       	breq	.+96     	; 0x1270 <__ultoa_invert+0x6c>
    1210:	e8 94       	clt
    1212:	6f 93       	push	r22
    1214:	6e 7f       	andi	r22, 0xFE	; 254
    1216:	6e 5f       	subi	r22, 0xFE	; 254
    1218:	7f 4f       	sbci	r23, 0xFF	; 255
    121a:	8f 4f       	sbci	r24, 0xFF	; 255
    121c:	9f 4f       	sbci	r25, 0xFF	; 255
    121e:	af 4f       	sbci	r26, 0xFF	; 255
    1220:	b1 e0       	ldi	r27, 0x01	; 1
    1222:	3e d0       	rcall	.+124    	; 0x12a0 <__ultoa_invert+0x9c>
    1224:	b4 e0       	ldi	r27, 0x04	; 4
    1226:	3c d0       	rcall	.+120    	; 0x12a0 <__ultoa_invert+0x9c>
    1228:	67 0f       	add	r22, r23
    122a:	78 1f       	adc	r23, r24
    122c:	89 1f       	adc	r24, r25
    122e:	9a 1f       	adc	r25, r26
    1230:	a1 1d       	adc	r26, r1
    1232:	68 0f       	add	r22, r24
    1234:	79 1f       	adc	r23, r25
    1236:	8a 1f       	adc	r24, r26
    1238:	91 1d       	adc	r25, r1
    123a:	a1 1d       	adc	r26, r1
    123c:	6a 0f       	add	r22, r26
    123e:	71 1d       	adc	r23, r1
    1240:	81 1d       	adc	r24, r1
    1242:	91 1d       	adc	r25, r1
    1244:	a1 1d       	adc	r26, r1
    1246:	20 d0       	rcall	.+64     	; 0x1288 <__ultoa_invert+0x84>
    1248:	09 f4       	brne	.+2      	; 0x124c <__ultoa_invert+0x48>
    124a:	68 94       	set
    124c:	3f 91       	pop	r19
    124e:	2a e0       	ldi	r18, 0x0A	; 10
    1250:	26 9f       	mul	r18, r22
    1252:	11 24       	eor	r1, r1
    1254:	30 19       	sub	r19, r0
    1256:	30 5d       	subi	r19, 0xD0	; 208
    1258:	31 93       	st	Z+, r19
    125a:	de f6       	brtc	.-74     	; 0x1212 <__ultoa_invert+0xe>
    125c:	cf 01       	movw	r24, r30
    125e:	08 95       	ret
    1260:	46 2f       	mov	r20, r22
    1262:	47 70       	andi	r20, 0x07	; 7
    1264:	40 5d       	subi	r20, 0xD0	; 208
    1266:	41 93       	st	Z+, r20
    1268:	b3 e0       	ldi	r27, 0x03	; 3
    126a:	0f d0       	rcall	.+30     	; 0x128a <__ultoa_invert+0x86>
    126c:	c9 f7       	brne	.-14     	; 0x1260 <__ultoa_invert+0x5c>
    126e:	f6 cf       	rjmp	.-20     	; 0x125c <__ultoa_invert+0x58>
    1270:	46 2f       	mov	r20, r22
    1272:	4f 70       	andi	r20, 0x0F	; 15
    1274:	40 5d       	subi	r20, 0xD0	; 208
    1276:	4a 33       	cpi	r20, 0x3A	; 58
    1278:	18 f0       	brcs	.+6      	; 0x1280 <__ultoa_invert+0x7c>
    127a:	49 5d       	subi	r20, 0xD9	; 217
    127c:	31 fd       	sbrc	r19, 1
    127e:	40 52       	subi	r20, 0x20	; 32
    1280:	41 93       	st	Z+, r20
    1282:	02 d0       	rcall	.+4      	; 0x1288 <__ultoa_invert+0x84>
    1284:	a9 f7       	brne	.-22     	; 0x1270 <__ultoa_invert+0x6c>
    1286:	ea cf       	rjmp	.-44     	; 0x125c <__ultoa_invert+0x58>
    1288:	b4 e0       	ldi	r27, 0x04	; 4
    128a:	a6 95       	lsr	r26
    128c:	97 95       	ror	r25
    128e:	87 95       	ror	r24
    1290:	77 95       	ror	r23
    1292:	67 95       	ror	r22
    1294:	ba 95       	dec	r27
    1296:	c9 f7       	brne	.-14     	; 0x128a <__ultoa_invert+0x86>
    1298:	00 97       	sbiw	r24, 0x00	; 0
    129a:	61 05       	cpc	r22, r1
    129c:	71 05       	cpc	r23, r1
    129e:	08 95       	ret
    12a0:	9b 01       	movw	r18, r22
    12a2:	ac 01       	movw	r20, r24
    12a4:	0a 2e       	mov	r0, r26
    12a6:	06 94       	lsr	r0
    12a8:	57 95       	ror	r21
    12aa:	47 95       	ror	r20
    12ac:	37 95       	ror	r19
    12ae:	27 95       	ror	r18
    12b0:	ba 95       	dec	r27
    12b2:	c9 f7       	brne	.-14     	; 0x12a6 <__ultoa_invert+0xa2>
    12b4:	62 0f       	add	r22, r18
    12b6:	73 1f       	adc	r23, r19
    12b8:	84 1f       	adc	r24, r20
    12ba:	95 1f       	adc	r25, r21
    12bc:	a0 1d       	adc	r26, r0
    12be:	08 95       	ret

000012c0 <eeprom_read_byte>:
    12c0:	f9 99       	sbic	0x1f, 1	; 31
    12c2:	fe cf       	rjmp	.-4      	; 0x12c0 <eeprom_read_byte>
    12c4:	92 bd       	out	0x22, r25	; 34
    12c6:	81 bd       	out	0x21, r24	; 33
    12c8:	f8 9a       	sbi	0x1f, 0	; 31
    12ca:	99 27       	eor	r25, r25
    12cc:	80 b5       	in	r24, 0x20	; 32
    12ce:	08 95       	ret

000012d0 <eeprom_write_byte>:
    12d0:	26 2f       	mov	r18, r22

000012d2 <eeprom_write_r18>:
    12d2:	f9 99       	sbic	0x1f, 1	; 31
    12d4:	fe cf       	rjmp	.-4      	; 0x12d2 <eeprom_write_r18>
    12d6:	1f ba       	out	0x1f, r1	; 31
    12d8:	92 bd       	out	0x22, r25	; 34
    12da:	81 bd       	out	0x21, r24	; 33
    12dc:	20 bd       	out	0x20, r18	; 32
    12de:	0f b6       	in	r0, 0x3f	; 63
    12e0:	f8 94       	cli
    12e2:	fa 9a       	sbi	0x1f, 2	; 31
    12e4:	f9 9a       	sbi	0x1f, 1	; 31
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	01 96       	adiw	r24, 0x01	; 1
    12ea:	08 95       	ret

000012ec <__divmodsi4>:
    12ec:	05 2e       	mov	r0, r21
    12ee:	97 fb       	bst	r25, 7
    12f0:	16 f4       	brtc	.+4      	; 0x12f6 <__divmodsi4+0xa>
    12f2:	00 94       	com	r0
    12f4:	0f d0       	rcall	.+30     	; 0x1314 <__negsi2>
    12f6:	57 fd       	sbrc	r21, 7
    12f8:	05 d0       	rcall	.+10     	; 0x1304 <__divmodsi4_neg2>
    12fa:	24 d0       	rcall	.+72     	; 0x1344 <__udivmodsi4>
    12fc:	07 fc       	sbrc	r0, 7
    12fe:	02 d0       	rcall	.+4      	; 0x1304 <__divmodsi4_neg2>
    1300:	46 f4       	brtc	.+16     	; 0x1312 <__divmodsi4_exit>
    1302:	08 c0       	rjmp	.+16     	; 0x1314 <__negsi2>

00001304 <__divmodsi4_neg2>:
    1304:	50 95       	com	r21
    1306:	40 95       	com	r20
    1308:	30 95       	com	r19
    130a:	21 95       	neg	r18
    130c:	3f 4f       	sbci	r19, 0xFF	; 255
    130e:	4f 4f       	sbci	r20, 0xFF	; 255
    1310:	5f 4f       	sbci	r21, 0xFF	; 255

00001312 <__divmodsi4_exit>:
    1312:	08 95       	ret

00001314 <__negsi2>:
    1314:	90 95       	com	r25
    1316:	80 95       	com	r24
    1318:	70 95       	com	r23
    131a:	61 95       	neg	r22
    131c:	7f 4f       	sbci	r23, 0xFF	; 255
    131e:	8f 4f       	sbci	r24, 0xFF	; 255
    1320:	9f 4f       	sbci	r25, 0xFF	; 255
    1322:	08 95       	ret

00001324 <__muluhisi3>:
    1324:	31 d0       	rcall	.+98     	; 0x1388 <__umulhisi3>
    1326:	a5 9f       	mul	r26, r21
    1328:	90 0d       	add	r25, r0
    132a:	b4 9f       	mul	r27, r20
    132c:	90 0d       	add	r25, r0
    132e:	a4 9f       	mul	r26, r20
    1330:	80 0d       	add	r24, r0
    1332:	91 1d       	adc	r25, r1
    1334:	11 24       	eor	r1, r1
    1336:	08 95       	ret

00001338 <__mulshisi3>:
    1338:	b7 ff       	sbrs	r27, 7
    133a:	f4 cf       	rjmp	.-24     	; 0x1324 <__muluhisi3>

0000133c <__mulohisi3>:
    133c:	f3 df       	rcall	.-26     	; 0x1324 <__muluhisi3>
    133e:	82 1b       	sub	r24, r18
    1340:	93 0b       	sbc	r25, r19
    1342:	08 95       	ret

00001344 <__udivmodsi4>:
    1344:	a1 e2       	ldi	r26, 0x21	; 33
    1346:	1a 2e       	mov	r1, r26
    1348:	aa 1b       	sub	r26, r26
    134a:	bb 1b       	sub	r27, r27
    134c:	fd 01       	movw	r30, r26
    134e:	0d c0       	rjmp	.+26     	; 0x136a <__udivmodsi4_ep>

00001350 <__udivmodsi4_loop>:
    1350:	aa 1f       	adc	r26, r26
    1352:	bb 1f       	adc	r27, r27
    1354:	ee 1f       	adc	r30, r30
    1356:	ff 1f       	adc	r31, r31
    1358:	a2 17       	cp	r26, r18
    135a:	b3 07       	cpc	r27, r19
    135c:	e4 07       	cpc	r30, r20
    135e:	f5 07       	cpc	r31, r21
    1360:	20 f0       	brcs	.+8      	; 0x136a <__udivmodsi4_ep>
    1362:	a2 1b       	sub	r26, r18
    1364:	b3 0b       	sbc	r27, r19
    1366:	e4 0b       	sbc	r30, r20
    1368:	f5 0b       	sbc	r31, r21

0000136a <__udivmodsi4_ep>:
    136a:	66 1f       	adc	r22, r22
    136c:	77 1f       	adc	r23, r23
    136e:	88 1f       	adc	r24, r24
    1370:	99 1f       	adc	r25, r25
    1372:	1a 94       	dec	r1
    1374:	69 f7       	brne	.-38     	; 0x1350 <__udivmodsi4_loop>
    1376:	60 95       	com	r22
    1378:	70 95       	com	r23
    137a:	80 95       	com	r24
    137c:	90 95       	com	r25
    137e:	9b 01       	movw	r18, r22
    1380:	ac 01       	movw	r20, r24
    1382:	bd 01       	movw	r22, r26
    1384:	cf 01       	movw	r24, r30
    1386:	08 95       	ret

00001388 <__umulhisi3>:
    1388:	a2 9f       	mul	r26, r18
    138a:	b0 01       	movw	r22, r0
    138c:	b3 9f       	mul	r27, r19
    138e:	c0 01       	movw	r24, r0
    1390:	a3 9f       	mul	r26, r19
    1392:	70 0d       	add	r23, r0
    1394:	81 1d       	adc	r24, r1
    1396:	11 24       	eor	r1, r1
    1398:	91 1d       	adc	r25, r1
    139a:	b2 9f       	mul	r27, r18
    139c:	70 0d       	add	r23, r0
    139e:	81 1d       	adc	r24, r1
    13a0:	11 24       	eor	r1, r1
    13a2:	91 1d       	adc	r25, r1
    13a4:	08 95       	ret

000013a6 <_exit>:
    13a6:	f8 94       	cli

000013a8 <__stop_program>:
    13a8:	ff cf       	rjmp	.-2      	; 0x13a8 <__stop_program>
